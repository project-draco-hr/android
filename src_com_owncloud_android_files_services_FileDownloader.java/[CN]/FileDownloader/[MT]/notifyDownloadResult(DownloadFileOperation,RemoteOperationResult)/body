{
  mNotificationManager.cancel(R.string.downloader_download_in_progress_ticker);
  if (!downloadResult.isCancelled() && !downloadResult.isSuccess()) {
    int tickerId=R.string.downloader_download_failed_ticker;
    boolean needsToUpdateCredentials=(downloadResult.getCode() == ResultCode.UNAUTHORIZED || (downloadResult.isIdPRedirection() && mDownloadClient.getCredentials() == null));
    tickerId=(needsToUpdateCredentials) ? R.string.downloader_download_failed_credentials_error : tickerId;
    mNotificationBuilder.setTicker(getString(tickerId)).setContentTitle(getString(tickerId)).setAutoCancel(true).setOngoing(false).setProgress(0,0,false);
    if (needsToUpdateCredentials) {
      Intent updateAccountCredentials=new Intent(this,AuthenticatorActivity.class);
      updateAccountCredentials.putExtra(AuthenticatorActivity.EXTRA_ACCOUNT,download.getAccount());
      updateAccountCredentials.putExtra(AuthenticatorActivity.EXTRA_ACTION,AuthenticatorActivity.ACTION_UPDATE_EXPIRED_TOKEN);
      updateAccountCredentials.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
      updateAccountCredentials.addFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
      updateAccountCredentials.addFlags(Intent.FLAG_FROM_BACKGROUND);
      mNotificationBuilder.setContentIntent(PendingIntent.getActivity(this,(int)System.currentTimeMillis(),updateAccountCredentials,PendingIntent.FLAG_ONE_SHOT));
      mDownloadClient=null;
    }
 else {
      Intent showDetailsIntent=new Intent();
      mNotificationBuilder.setContentIntent(PendingIntent.getActivity(this,(int)System.currentTimeMillis(),showDetailsIntent,0));
    }
    mNotificationBuilder.setContentText(ErrorMessageAdapter.getErrorCauseMessage(downloadResult,download,getResources()));
    mNotificationManager.notify(tickerId,mNotificationBuilder.build());
  }
}
