{
  mNotificationManager.cancel(R.string.downloader_download_in_progress_ticker);
  if (!downloadResult.isCancelled()) {
    int tickerId=(downloadResult.isSuccess()) ? R.string.downloader_download_succeeded_ticker : R.string.downloader_download_failed_ticker;
    int contentId=(downloadResult.isSuccess()) ? R.string.downloader_download_succeeded_content : R.string.downloader_download_failed_content;
    Notification finalNotification=new Notification(R.drawable.icon,getString(tickerId),System.currentTimeMillis());
    finalNotification.flags|=Notification.FLAG_AUTO_CANCEL;
    Intent showDetailsIntent=null;
    if (downloadResult.isSuccess()) {
      if (PreviewImageFragment.canBePreviewed(download.getFile())) {
        showDetailsIntent=new Intent(this,PreviewImageActivity.class);
      }
 else {
        showDetailsIntent=new Intent(this,FileDetailActivity.class);
      }
      showDetailsIntent.putExtra(FileDetailFragment.EXTRA_FILE,download.getFile());
      showDetailsIntent.putExtra(FileDetailFragment.EXTRA_ACCOUNT,download.getAccount());
      showDetailsIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    }
 else {
      showDetailsIntent=new Intent();
    }
    finalNotification.contentIntent=PendingIntent.getActivity(getApplicationContext(),(int)System.currentTimeMillis(),showDetailsIntent,0);
    finalNotification.setLatestEventInfo(getApplicationContext(),getString(tickerId),String.format(getString(contentId),new File(download.getSavePath()).getName()),finalNotification.contentIntent);
    mNotificationManager.notify(tickerId,finalNotification);
  }
}
