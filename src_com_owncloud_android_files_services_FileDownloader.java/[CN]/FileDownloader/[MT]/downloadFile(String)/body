{
  mCurrentDownload=mPendingDownloads.get(downloadKey);
  if (mCurrentDownload != null) {
    notifyDownloadStart(mCurrentDownload);
    RemoteOperationResult downloadResult=null;
    try {
      if (mDownloadClient == null || !mLastAccount.equals(mCurrentDownload.getAccount())) {
        mLastAccount=mCurrentDownload.getAccount();
        mStorageManager=new FileDataStorageManager(mLastAccount,getContentResolver());
        OwnCloudAccount ocAccount=new OwnCloudAccount(mLastAccount,this);
        mDownloadClient=OwnCloudClientManagerFactory.getDefaultSingleton().getClientFor(ocAccount,this);
      }
      downloadResult=mCurrentDownload.execute(mDownloadClient);
      if (downloadResult.isSuccess()) {
        saveDownloadedFile();
      }
    }
 catch (    AccountsException e) {
      Log_OC.e(TAG,"Error while trying to get authorization for " + mLastAccount.name,e);
      downloadResult=new RemoteOperationResult(e);
    }
catch (    IOException e) {
      Log_OC.e(TAG,"Error while trying to get authorization for " + mLastAccount.name,e);
      downloadResult=new RemoteOperationResult(e);
    }
 finally {
      Pair<DownloadFileOperation,String> removeResult=mPendingDownloads.remove(mLastAccount,mCurrentDownload.getRemotePath());
      notifyDownloadResult(mCurrentDownload,downloadResult);
      sendBroadcastDownloadFinished(mCurrentDownload,downloadResult,removeResult.second);
    }
  }
}
