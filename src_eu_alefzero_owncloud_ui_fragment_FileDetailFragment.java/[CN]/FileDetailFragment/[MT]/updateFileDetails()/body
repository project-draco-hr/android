{
  if (mFile != null && mAccount != null && mLayout == R.layout.file_details_fragment) {
    Button downloadButton=(Button)getView().findViewById(R.id.fdDownloadBtn);
    setFilename(mFile.getFileName());
    setFiletype(DisplayUtils.convertMIMEtoPrettyPrint(mFile.getMimetype()));
    setFilesize(mFile.getFileLength());
    if (ocVersionSupportsTimeCreated()) {
      setTimeCreated(mFile.getCreationTimestamp());
    }
    setTimeModified(mFile.getModificationTimestamp());
    if (mFile.getStoragePath() != null) {
      ImageView preview=(ImageView)getView().findViewById(R.id.fdPreview);
      boolean previewIsSet=false;
      try {
        if (mFile.getMimetype().startsWith("image/")) {
          BitmapFactory.Options options=new Options();
          options.inScaled=true;
          options.inPurgeable=true;
          if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD_MR1) {
            options.inPreferQualityOverSpeed=false;
          }
          if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
            options.inMutable=false;
          }
          Bitmap bmp=BitmapFactory.decodeFile(mFile.getStoragePath(),options);
          if (bmp != null) {
            int width=options.outWidth;
            int height=options.outHeight;
            int scale=1;
            if (width >= 2048 || height >= 2048) {
              scale=(int)(Math.ceil(Math.max(height,width) / 2048.));
              options.inSampleSize=scale;
              bmp.recycle();
              bmp=BitmapFactory.decodeFile(mFile.getStoragePath(),options);
            }
          }
          if (bmp != null) {
            preview.setImageDrawable(new BitmapDrawable(preview.getResources(),bmp));
            previewIsSet=true;
          }
        }
      }
 catch (      OutOfMemoryError e) {
        preview.setVisibility(View.INVISIBLE);
        Log.e(TAG,"Out of memory occured for file with size " + mFile.getFileLength());
      }
catch (      NoSuchFieldError e) {
        preview.setVisibility(View.INVISIBLE);
        Log.e(TAG,"Error from access to unexisting field despite protection " + mFile.getFileLength());
      }
catch (      Throwable t) {
        preview.setVisibility(View.INVISIBLE);
        Log.e(TAG,"Unexpected error while creating image preview " + mFile.getFileLength(),t);
      }
 finally {
        if (!previewIsSet) {
          resetPreview();
        }
      }
      downloadButton.setText(R.string.filedetails_open);
      downloadButton.setOnClickListener(new OnClickListener(){
        @Override public void onClick(        View v){
          String storagePath=mFile.getStoragePath();
          try {
            Intent i=new Intent(Intent.ACTION_VIEW);
            i.setDataAndType(Uri.parse("file://" + storagePath),mFile.getMimetype());
            i.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
            startActivity(i);
          }
 catch (          Throwable t) {
            Log.e(TAG,"Fail when trying to open with the mimeType provided from the ownCloud server: " + mFile.getMimetype());
            boolean toastIt=true;
            String mimeType="";
            try {
              Intent i=new Intent(Intent.ACTION_VIEW);
              mimeType=MimeTypeMap.getSingleton().getMimeTypeFromExtension(storagePath.substring(storagePath.lastIndexOf('.') + 1));
              if (mimeType != mFile.getMimetype()) {
                i.setDataAndType(Uri.parse("file://" + mFile.getStoragePath()),mimeType);
                i.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
                startActivity(i);
                toastIt=false;
              }
            }
 catch (            IndexOutOfBoundsException e) {
              Log.e(TAG,"Trying to find out MIME type of a file without extension: " + storagePath);
            }
catch (            ActivityNotFoundException e) {
              Log.e(TAG,"No activity found to handle: " + storagePath + " with MIME type "+ mimeType+ " obtained from extension");
            }
catch (            Throwable th) {
              Log.e(TAG,"Unexpected problem when opening: " + storagePath,th);
            }
 finally {
              if (toastIt) {
                Toast.makeText(getActivity(),"There is no application to handle file " + mFile.getFileName(),Toast.LENGTH_SHORT).show();
              }
            }
          }
        }
      }
);
    }
 else {
      downloadButton.setOnClickListener(this);
      resetPreview();
    }
  }
}
