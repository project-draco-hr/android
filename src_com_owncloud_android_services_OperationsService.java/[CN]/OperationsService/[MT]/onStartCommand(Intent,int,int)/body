{
  if (!intent.hasExtra(EXTRA_ACCOUNT) && !intent.hasExtra(EXTRA_SERVER_URL)) {
    Log_OC.e(TAG,"Not enough information provided in intent");
    return START_NOT_STICKY;
  }
  try {
    Account account=intent.getParcelableExtra(EXTRA_ACCOUNT);
    String serverUrl=intent.getStringExtra(EXTRA_SERVER_URL);
    Target target=new Target(account,(serverUrl == null) ? null : Uri.parse(serverUrl));
    RemoteOperation operation=null;
    String action=intent.getAction();
    if (action.equals(ACTION_CREATE_SHARE)) {
      String remotePath=intent.getStringExtra(EXTRA_REMOTE_PATH);
      Intent sendIntent=intent.getParcelableExtra(EXTRA_SEND_INTENT);
      if (remotePath.length() > 0) {
        operation=new CreateShareOperation(remotePath,ShareType.PUBLIC_LINK,"",false,"",1,sendIntent);
      }
    }
 else     if (action.equals(ACTION_UNSHARE)) {
      String remotePath=intent.getStringExtra(EXTRA_REMOTE_PATH);
      if (remotePath.length() > 0) {
        operation=new UnshareLinkOperation(remotePath,this.getApplicationContext());
      }
    }
 else     if (action.equals(ACTION_DETECT_AUTHENTICATION_METHOD)) {
      operation=new DetectAuthenticationMethodOperation(this.getApplicationContext());
    }
 else {
      return START_NOT_STICKY;
    }
    mPendingOperations.add(new Pair<Target,RemoteOperation>(target,operation));
    Message msg=mServiceHandler.obtainMessage();
    msg.arg1=startId;
    mServiceHandler.sendMessage(msg);
  }
 catch (  IllegalArgumentException e) {
    Log_OC.e(TAG,"Bad information provided in intent: " + e.getMessage());
    return START_NOT_STICKY;
  }
  return START_NOT_STICKY;
}
