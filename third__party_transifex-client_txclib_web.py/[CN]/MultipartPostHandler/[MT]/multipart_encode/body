def multipart_encode(vars, files, boundary=None, buf=None):
    if (boundary is None):
        boundary = mimetools.choose_boundary()
    if (buf is None):
        buf = StringIO()
    for (key, value) in vars:
        buf.write(('--%s\r\n' % boundary))
        buf.write(('Content-Disposition: form-data; name="%s"' % key))
        buf.write((('\r\n\r\n' + value) + '\r\n'))
    for (key, fd) in files:
        file_size = os.fstat(fd.fileno())[stat.ST_SIZE]
        filename = fd.name.split('/')[(-1)]
        contenttype = (mimetypes.guess_type(filename)[0] or 'application/octet-stream')
        buf.write(('--%s\r\n' % boundary))
        buf.write(('Content-Disposition: form-data; name="%s"; filename="%s"\r\n' % (key, filename)))
        buf.write(('Content-Type: %s\r\n' % contenttype))
        fd.seek(0)
        buf.write((('\r\n' + fd.read()) + '\r\n'))
    buf.write((('--' + boundary) + '--\r\n\r\n'))
    buf = buf.getvalue()
    return (boundary, buf)
