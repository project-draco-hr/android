{
  ByteBuffer tmp=ByteBuffer.allocate(4096);
  int readResult=0;
  RandomAccessFile raf=new RandomAccessFile(mFile,"r");
  FileChannel channel=raf.getChannel();
  Iterator<OnDatatransferProgressListener> it=null;
  long transferred=0;
  long size=mFile.length();
  if (size == 0)   size=-1;
  try {
    while ((readResult=channel.read(tmp)) >= 0) {
      out.write(tmp.array(),0,readResult);
      tmp.clear();
      transferred+=readResult;
synchronized (mDataTransferListeners) {
        it=mDataTransferListeners.iterator();
        while (it.hasNext()) {
          it.next().onTransferProgress(readResult,transferred,size,mFile.getName());
        }
      }
    }
  }
 catch (  IOException io) {
    Log.e("FileRequestException",io.getMessage());
    throw new RuntimeException("Ugly solution to workaround the default policy of retries when the server falls while uploading ; temporal fix; really",io);
  }
 finally {
    channel.close();
    raf.close();
  }
}
