{
  confirmingPinCode=false;
  String rText1=mText1.getText().toString();
  String rText2=mText2.getText().toString();
  String rText3=mText3.getText().toString();
  String rText4=mText4.getText().toString();
  if (tempText[0].equals(rText1) && tempText[1].equals(rText2) && tempText[2].equals(rText3)&& tempText[3].equals(rText4)) {
    savePincodeAndExit();
  }
 else {
    Arrays.fill(tempText,null);
    AlertDialog aDialog=new AlertDialog.Builder(this).create();
    CharSequence errorSeq=getString(R.string.common_error);
    aDialog.setTitle(errorSeq);
    CharSequence cseq=getString(R.string.pincode_mismatch);
    aDialog.setMessage(cseq);
    CharSequence okSeq=getString(R.string.common_ok);
    aDialog.setButton(okSeq,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        return;
      }
    }
);
    aDialog.show();
    mPinHdr.setText(R.string.pincode_configure_your_pin);
    clearBoxes();
  }
}
