{
  for (  TreeNode n : root.getChildList()) {
    Log.d(TAG,n.toString());
    ContentValues cv=new ContentValues();
    cv.put(ProviderTableMeta.FILE_CONTENT_LENGTH,n.getProperty(NodeProperty.CONTENT_LENGTH));
    cv.put(ProviderTableMeta.FILE_MODIFIED,n.getProperty(NodeProperty.LAST_MODIFIED_DATE));
    cv.put(ProviderTableMeta.FILE_CONTENT_TYPE,n.getProperty(NodeProperty.RESOURCE_TYPE));
    cv.put(ProviderTableMeta.FILE_PARENT,parentId);
    String name=n.getProperty(NodeProperty.NAME), path=n.getProperty(NodeProperty.PATH);
    Cursor c=this.getContentProvider().query(ProviderTableMeta.CONTENT_URI_FILE,null,ProviderTableMeta.FILE_NAME + "=? AND " + ProviderTableMeta.FILE_PATH+ "=? AND "+ ProviderTableMeta.FILE_ACCOUNT_OWNER+ "=?",new String[]{name,path,this.getAccount().name},null);
    if (c.moveToFirst()) {
      this.getContentProvider().update(ProviderTableMeta.CONTENT_URI,cv,ProviderTableMeta._ID + "=?",new String[]{c.getString(c.getColumnIndex(ProviderTableMeta._ID))});
      Log.d(TAG,"ID of: " + name + ":"+ c.getString(c.getColumnIndex(ProviderTableMeta._ID)));
    }
 else {
      cv.put(ProviderTableMeta.FILE_NAME,n.getProperty(NodeProperty.NAME));
      cv.put(ProviderTableMeta.FILE_PATH,n.getProperty(NodeProperty.PATH));
      cv.put(ProviderTableMeta.FILE_ACCOUNT_OWNER,this.getAccount().name);
      Uri entry=this.getContentProvider().insert(ProviderTableMeta.CONTENT_URI_FILE,cv);
      Log.d(TAG,"Inserting new entry " + path);
      c=this.getContentProvider().query(entry,null,null,null,null);
      c.moveToFirst();
    }
    if (n.getProperty(NodeProperty.RESOURCE_TYPE).equals("DIR")) {
      commitToDatabase(n,c.getString(c.getColumnIndex(ProviderTableMeta._ID)));
    }
  }
  String[] selection=new String[root.getChildList().size() + 2];
  selection[0]=this.getAccount().name;
  selection[1]=parentId;
  String qm="";
  for (int i=2; i < selection.length - 1; ++i) {
    qm+="?,";
    selection[i]=root.getChildList().get(i - 2).getProperty(NodeProperty.NAME);
  }
  if (selection.length >= 3) {
    selection[selection.length - 1]=root.getChildrenNames()[selection.length - 3];
    qm+="?";
  }
  for (int i=0; i < selection.length; ++i) {
    Log.d(TAG,selection[i] + "");
  }
  Log.d(TAG,"Removing files " + parentId);
  this.getContentProvider().delete(ProviderTableMeta.CONTENT_URI,ProviderTableMeta.FILE_ACCOUNT_OWNER + "=? AND " + ProviderTableMeta.FILE_PARENT+ (parentId == null ? " IS " : "=")+ "? AND "+ ProviderTableMeta.FILE_NAME+ " NOT IN ("+ qm+ ")",selection);
}
