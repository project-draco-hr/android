{
  try {
    PropFindMethod query=new PropFindMethod(uri);
    getClient().executeMethod(query);
    MultiStatus resp=null;
    resp=query.getResponseBodyAsMultiStatus();
    List<OCFile> updatedFiles=new Vector<OCFile>(resp.getResponses().length - 1);
    for (int i=1; i < resp.getResponses().length; ++i) {
      WebdavEntry we=new WebdavEntry(resp.getResponses()[i],getUri().getPath());
      OCFile file=fillOCFile(we);
      file.setParentId(parentId);
      if (getStorageManager().getFileByPath(file.getRemotePath()) != null && getStorageManager().getFileByPath(file.getRemotePath()).keepInSync() && file.getModificationTimestamp() > getStorageManager().getFileByPath(file.getRemotePath()).getModificationTimestamp()) {
        Intent intent=new Intent(this.getContext(),FileDownloader.class);
        intent.putExtra(FileDownloader.EXTRA_ACCOUNT,getAccount());
        intent.putExtra(FileDownloader.EXTRA_FILE_PATH,file.getRemotePath());
        intent.putExtra(FileDownloader.EXTRA_REMOTE_PATH,file.getRemotePath());
        intent.putExtra(FileDownloader.EXTRA_FILE_SIZE,file.getFileLength());
        file.setKeepInSync(true);
        getContext().startService(intent);
      }
      if (getStorageManager().getFileByPath(file.getRemotePath()) != null)       file.setKeepInSync(getStorageManager().getFileByPath(file.getRemotePath()).keepInSync());
      updatedFiles.add(file);
      if (parentId == 0)       parentId=file.getFileId();
    }
    getStorageManager().saveFiles(updatedFiles);
    Vector<OCFile> files=getStorageManager().getDirectoryContent(getStorageManager().getFileById(parentId));
    OCFile file;
    for (int i=0; i < files.size(); ) {
      file=files.get(i);
      if (file.getLastSyncDate() != mCurrentSyncTime) {
        getStorageManager().removeFile(file);
        files.remove(i);
      }
 else {
        i++;
      }
    }
    sendStickyBroadcast(true,getStorageManager().getFileById(parentId).getRemotePath());
    for (int i=0; i < files.size() && !mCancellation; i++) {
      OCFile newFile=files.get(i);
      if (newFile.getMimetype().equals("DIR")) {
        fetchData(getUri().toString() + WebdavUtils.encodePath(newFile.getRemotePath()),syncResult,newFile.getFileId());
      }
    }
    if (mCancellation)     Log.d(TAG,"Leaving " + uri + " because cancellation request");
  }
 catch (  OperationCanceledException e) {
    e.printStackTrace();
  }
catch (  AuthenticatorException e) {
    syncResult.stats.numAuthExceptions++;
    e.printStackTrace();
  }
catch (  IOException e) {
    syncResult.stats.numIoExceptions++;
    e.printStackTrace();
  }
catch (  DavException e) {
    syncResult.stats.numIoExceptions++;
    e.printStackTrace();
  }
catch (  Throwable t) {
    Log.e(TAG,"problem while synchronizing owncloud account " + mAccount.name,t);
    t.printStackTrace();
  }
}
