{
  DefaultHttpClient c=new DefaultHttpClient();
  c.getCredentialsProvider().setCredentials(new AuthScope(url.getHost(),(url.getPort() == -1) ? 80 : url.getPort()),new UsernamePasswordCredentials(username,pwd));
  BasicHttpContext localcontext=new BasicHttpContext();
  BasicScheme basicAuth=new BasicScheme();
  localcontext.setAttribute("preemptive-auth",basicAuth);
  HttpHost targetHost=new HttpHost(url.getHost(),(url.getPort() == -1) ? 80 : url.getPort(),(url.getProtocol() == "https") ? "https" : "http");
  HttpHead httpget=new HttpHead(url.toString());
  HttpResponse response=null;
  try {
    response=c.execute(targetHost,httpget,localcontext);
  }
 catch (  ClientProtocolException e1) {
    sendResult(false,handler,context,"Protocol error: " + e1.getLocalizedMessage());
    return false;
  }
catch (  UnknownHostException e1) {
    mResultMsg="Unknowh host: " + e1.getLocalizedMessage();
    return false;
  }
catch (  IOException e1) {
    mResultMsg="Error: " + e1.getLocalizedMessage();
    return false;
  }
  String status=response.getStatusLine().toString();
  status=status.split(" ")[1];
  Log.i("AuthUtils","Status returned: " + status);
  if (status.equals("200")) {
    return true;
  }
 else   if (status.equals("404")) {
    mResultMsg="404";
    return false;
  }
 else   if (status.equals("401")) {
    mResultMsg="401";
    return false;
  }
  mResultMsg=status;
  return false;
}
