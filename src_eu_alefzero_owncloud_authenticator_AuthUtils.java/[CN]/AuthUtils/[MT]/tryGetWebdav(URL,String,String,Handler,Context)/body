{
  SchemeRegistry schemeRegistry=new SchemeRegistry();
  schemeRegistry.register(new Scheme("http",PlainSocketFactory.getSocketFactory(),80));
  schemeRegistry.register(new Scheme("https",new EasySSLSocketFactory(),443));
  HttpParams params=new BasicHttpParams();
  params.setParameter(ConnManagerPNames.MAX_TOTAL_CONNECTIONS,30);
  params.setParameter(ConnManagerPNames.MAX_CONNECTIONS_PER_ROUTE,new ConnPerRouteBean(30));
  params.setParameter(HttpProtocolParams.USE_EXPECT_CONTINUE,false);
  HttpProtocolParams.setVersion(params,HttpVersion.HTTP_1_1);
  ClientConnectionManager cm=new ThreadSafeClientConnManager(params,schemeRegistry);
  DefaultHttpClient c=new DefaultHttpClient(cm,params);
  c.getCredentialsProvider().setCredentials(new AuthScope(url.getHost(),(url.getPort() == -1) ? 80 : url.getPort()),new UsernamePasswordCredentials(username,pwd));
  BasicHttpContext localcontext=new BasicHttpContext();
  BasicScheme basicAuth=new BasicScheme();
  localcontext.setAttribute("preemptive-auth",basicAuth);
  HttpHost targetHost=new HttpHost(url.getHost(),(url.getPort() == -1) ? 80 : url.getPort(),(url.getProtocol().equals("https")) ? "https" : "http");
  HttpHead httpget=new HttpHead(url.toString());
  httpget.setHeader("Host",url.getHost());
  HttpResponse response=null;
  try {
    response=c.execute(targetHost,httpget,localcontext);
  }
 catch (  ClientProtocolException e1) {
    sendResult(false,handler,context,"Protocol error: " + e1.getLocalizedMessage());
    return false;
  }
catch (  UnknownHostException e1) {
    mResultMsg="Unknowh host: " + e1.getLocalizedMessage();
    return false;
  }
catch (  IOException e1) {
    mResultMsg="Error: " + e1.getLocalizedMessage();
    return false;
  }
  String status=response.getStatusLine().toString();
  status=status.split(" ")[1];
  Log.i("AuthUtils","Status returned: " + status);
  if (status.equals("200")) {
    return true;
  }
 else   if (status.equals("404")) {
    mResultMsg="404";
    return false;
  }
 else   if (status.equals("401")) {
    mResultMsg="401";
    return false;
  }
  mResultMsg=status;
  return false;
}
