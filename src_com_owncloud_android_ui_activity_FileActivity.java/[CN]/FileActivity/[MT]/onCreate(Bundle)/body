{
  super.onCreate(savedInstanceState);
  mHandler=new Handler();
  mFileOperationsHelper=new FileOperationsHelper(this);
  Account account;
  if (savedInstanceState != null) {
    account=savedInstanceState.getParcelable(FileActivity.EXTRA_ACCOUNT);
    mFile=savedInstanceState.getParcelable(FileActivity.EXTRA_FILE);
    mFromNotification=savedInstanceState.getBoolean(FileActivity.EXTRA_FROM_NOTIFICATION);
    mFileOperationsHelper.setOpIdWaitingFor(savedInstanceState.getLong(KEY_WAITING_FOR_OP_ID,Long.MAX_VALUE));
    mTryShareAgain=savedInstanceState.getBoolean(KEY_TRY_SHARE_AGAIN);
  }
 else {
    account=getIntent().getParcelableExtra(FileActivity.EXTRA_ACCOUNT);
    mFile=getIntent().getParcelableExtra(FileActivity.EXTRA_FILE);
    mFromNotification=getIntent().getBooleanExtra(FileActivity.EXTRA_FROM_NOTIFICATION,false);
  }
  setAccount(account,savedInstanceState != null);
  mOperationsServiceConnection=new OperationsServiceConnection();
  bindService(new Intent(this,OperationsService.class),mOperationsServiceConnection,Context.BIND_AUTO_CREATE);
  mDownloadServiceConnection=newTransferenceServiceConnection();
  if (mDownloadServiceConnection != null) {
    bindService(new Intent(this,FileDownloader.class),mDownloadServiceConnection,Context.BIND_AUTO_CREATE);
  }
  mUploadServiceConnection=newTransferenceServiceConnection();
  if (mUploadServiceConnection != null) {
    bindService(new Intent(this,FileUploader.class),mUploadServiceConnection,Context.BIND_AUTO_CREATE);
  }
}
