{
  mView=view;
  String id=mIntent.getStringExtra("FILE_ID");
  Account account=mIntent.getParcelableExtra("ACCOUNT");
  String account_name=account.name;
  Cursor c=getActivity().managedQuery(Uri.withAppendedPath(ProviderTableMeta.CONTENT_URI_FILE,id),null,ProviderTableMeta.FILE_ACCOUNT_OWNER + "=?",new String[]{account_name},null);
  c.moveToFirst();
  String filename=c.getString(c.getColumnIndex(ProviderTableMeta.FILE_NAME));
  String mimetype=c.getString(c.getColumnIndex(ProviderTableMeta.FILE_CONTENT_TYPE));
  String path=c.getString(c.getColumnIndex(ProviderTableMeta.FILE_STORAGE_PATH));
  long filesize=c.getLong(c.getColumnIndex(ProviderTableMeta.FILE_CONTENT_LENGTH));
  setFilename(filename);
  setFiletype(DisplayUtils.convertMIMEtoPrettyPrint(mimetype));
  setFilesize(filesize);
  View w=view.findViewById(R.id.videoView1);
  w.setVisibility(View.INVISIBLE);
  if (path == null) {
    ImageView v=(ImageView)getView().findViewById(R.id.imageView2);
    v.setImageResource(R.drawable.download);
    v.setOnClickListener(this);
  }
 else {
    if (mimetype.startsWith("image/")) {
      ImageView v=(ImageView)view.findViewById(R.id.imageView2);
      Bitmap bmp=BitmapFactory.decodeFile(path);
      v.setImageBitmap(bmp);
    }
 else     if (mimetype.startsWith("video/")) {
      VideoView v=(VideoView)view.findViewById(R.id.videoView1);
      v.setVisibility(View.VISIBLE);
      v.setVideoPath(path);
      v.start();
    }
  }
}
