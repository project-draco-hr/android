{
  final int childCount=getChildCount();
  int largestChildWidth=0;
  for (int i=0; i < childCount; i++) {
    final View child=getChildAt(i);
    largestChildWidth=Math.max(child.getMeasuredWidth(),largestChildWidth);
  }
  int totalWidth=0;
  for (int i=0; i < childCount; i++) {
    final View child=getChildAt(i);
    if (child == null || child.getVisibility() == View.GONE) {
      continue;
    }
    final LinearLayout.LayoutParams lp=(LinearLayout.LayoutParams)child.getLayoutParams();
    float childExtra=lp.weight;
    if (childExtra > 0) {
      child.measure(MeasureSpec.makeMeasureSpec(largestChildWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(child.getMeasuredHeight(),MeasureSpec.EXACTLY));
      totalWidth+=largestChildWidth;
    }
 else {
      totalWidth+=child.getMeasuredWidth();
    }
    totalWidth+=lp.leftMargin + lp.rightMargin;
  }
  totalWidth+=getPaddingLeft() + getPaddingRight();
  setMeasuredDimension(totalWidth,getMeasuredHeight());
}
