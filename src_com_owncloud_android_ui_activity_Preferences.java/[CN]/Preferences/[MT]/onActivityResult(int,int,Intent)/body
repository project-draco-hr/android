{
  super.onActivityResult(requestCode,resultCode,data);
  if (requestCode == ACTION_SELECT_UPLOAD_PATH && resultCode == RESULT_OK) {
    OCFile folderToUpload=data.getParcelableExtra(UploadPathActivity.EXTRA_FOLDER);
    mUploadPath=folderToUpload.getRemotePath();
    mPrefInstantUploadPath.setSummary(DisplayUtils.getPathWithoutLastSlash(mUploadPath));
    saveInstantUploadPathOnPreferences();
  }
 else   if (requestCode == ACTION_SELECT_UPLOAD_VIDEO_PATH && resultCode == RESULT_OK) {
    OCFile folderToUploadVideo=data.getParcelableExtra(UploadPathActivity.EXTRA_FOLDER);
    mUploadVideoPath=folderToUploadVideo.getRemotePath();
    mPrefInstantVideoUploadPath.setSummary(DisplayUtils.getPathWithoutLastSlash(mUploadVideoPath));
    saveInstantUploadVideoPathOnPreferences();
  }
 else   if (requestCode == ACTION_SELECT_SOURCE_PATH && resultCode == RESULT_OK) {
    mSourcePath=data.getStringExtra(LocalFolderPickerActivity.EXTRA_PATH);
    mPrefInstantUploadSourcePath.setSummary(DisplayUtils.getPathWithoutLastSlash(mSourcePath));
    saveInstantUploadSourcePathOnPreferences();
  }
 else   if (requestCode == ACTION_REQUEST_PASSCODE && resultCode == RESULT_OK) {
    String passcode=data.getStringExtra(PassCodeActivity.KEY_PASSCODE);
    if (passcode != null && passcode.length() == 4) {
      SharedPreferences.Editor appPrefs=PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
      for (int i=1; i <= 4; ++i) {
        appPrefs.putString(PassCodeActivity.PREFERENCE_PASSCODE_D + i,passcode.substring(i - 1,i));
      }
      appPrefs.putBoolean(PassCodeActivity.PREFERENCE_SET_PASSCODE,true);
      appPrefs.commit();
      Toast.makeText(this,R.string.pass_code_stored,Toast.LENGTH_LONG).show();
    }
  }
 else   if (requestCode == ACTION_CONFIRM_PASSCODE && resultCode == RESULT_OK) {
    if (data.getBooleanExtra(PassCodeActivity.KEY_CHECK_RESULT,false)) {
      SharedPreferences.Editor appPrefs=PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit();
      appPrefs.putBoolean(PassCodeActivity.PREFERENCE_SET_PASSCODE,false);
      appPrefs.commit();
      Toast.makeText(this,R.string.pass_code_removed,Toast.LENGTH_LONG).show();
    }
  }
}
