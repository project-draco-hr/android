{
  super.onCreate(savedInstanceState);
  mDbHandler=new DbHandler(getBaseContext());
  addPreferencesFromResource(R.xml.preferences);
  ActionBar actionBar=getSherlock().getActionBar();
  actionBar.setIcon(DisplayUtils.getSeasonalIconId());
  actionBar.setDisplayHomeAsUpEnabled(true);
  Preference p=findPreference("manage_account");
  if (p != null)   p.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      Intent i=new Intent(getApplicationContext(),AccountSelectActivity.class);
      startActivity(i);
      return true;
    }
  }
);
  pCode=(CheckBoxPreference)findPreference("set_pincode");
  if (pCode != null) {
    pCode.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
      @Override public boolean onPreferenceChange(      Preference preference,      Object newValue){
        Intent i=new Intent(getApplicationContext(),PinCodeActivity.class);
        i.putExtra(PinCodeActivity.EXTRA_ACTIVITY,"preferences");
        i.putExtra(PinCodeActivity.EXTRA_NEW_STATE,newValue.toString());
        startActivity(i);
        return true;
      }
    }
);
  }
  PreferenceCategory preferenceCategory=(PreferenceCategory)findPreference("more");
  boolean helpEnabled=getResources().getBoolean(R.bool.help_enabled);
  Preference pHelp=findPreference("help");
  if (pHelp != null) {
    if (helpEnabled) {
      pHelp.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          String helpWeb=(String)getText(R.string.url_help);
          if (helpWeb != null && helpWeb.length() > 0) {
            Uri uriUrl=Uri.parse(helpWeb);
            Intent intent=new Intent(Intent.ACTION_VIEW,uriUrl);
            startActivity(intent);
          }
          return true;
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pHelp);
    }
  }
  boolean recommendEnabled=getResources().getBoolean(R.bool.recommend_enabled);
  Preference pRecommend=findPreference("recommend");
  if (pRecommend != null) {
    if (recommendEnabled) {
      pRecommend.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          Intent intent=new Intent(Intent.ACTION_SENDTO);
          intent.setType("text/plain");
          intent.setData(Uri.parse(getString(R.string.mail_recommend)));
          intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
          String appName=getString(R.string.app_name);
          String downloadUrl=getString(R.string.url_app_download);
          Account currentAccount=AccountUtils.getCurrentOwnCloudAccount(Preferences.this);
          String username=currentAccount.name.substring(0,currentAccount.name.lastIndexOf('@'));
          String recommendSubject=String.format(getString(R.string.recommend_subject),appName);
          String recommendText=String.format(getString(R.string.recommend_text),appName,downloadUrl,username);
          intent.putExtra(Intent.EXTRA_SUBJECT,recommendSubject);
          intent.putExtra(Intent.EXTRA_TEXT,recommendText);
          startActivity(intent);
          return (true);
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pRecommend);
    }
  }
  boolean feedbackEnabled=getResources().getBoolean(R.bool.feedback_enabled);
  Preference pFeedback=findPreference("feedback");
  if (pFeedback != null) {
    if (feedbackEnabled) {
      pFeedback.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          String feedbackMail=(String)getText(R.string.mail_feedback);
          String feedback=(String)getText(R.string.prefs_feedback);
          Intent intent=new Intent(Intent.ACTION_SENDTO);
          intent.setType("text/plain");
          intent.putExtra(Intent.EXTRA_SUBJECT,feedback);
          intent.setData(Uri.parse(feedbackMail));
          intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
          startActivity(intent);
          return true;
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pFeedback);
    }
  }
  boolean imprintEnabled=getResources().getBoolean(R.bool.imprint_enabled);
  Preference pImprint=findPreference("imprint");
  if (pImprint != null) {
    if (imprintEnabled) {
      pImprint.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          String imprintWeb=(String)getText(R.string.url_imprint);
          if (imprintWeb != null && imprintWeb.length() > 0) {
            Uri uriUrl=Uri.parse(imprintWeb);
            Intent intent=new Intent(Intent.ACTION_VIEW,uriUrl);
            startActivity(intent);
          }
          return true;
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pImprint);
    }
  }
  pAboutApp=(Preference)findPreference("about_app");
  if (pAboutApp != null) {
    pAboutApp.setTitle(String.format(getString(R.string.about_android),getString(R.string.app_name)));
    PackageInfo pkg;
    try {
      pkg=getPackageManager().getPackageInfo(getPackageName(),0);
      pAboutApp.setSummary(String.format(getString(R.string.about_version),pkg.versionName));
    }
 catch (    NameNotFoundException e) {
      Log_OC.e(TAG,"Error while showing about dialog",e);
    }
  }
}
