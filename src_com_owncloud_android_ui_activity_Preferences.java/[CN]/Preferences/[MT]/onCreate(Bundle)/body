{
  super.onCreate(savedInstanceState);
  mDbHandler=new DbHandler(getBaseContext());
  addPreferencesFromResource(R.xml.preferences);
  ActionBar actionBar=getSherlock().getActionBar();
  actionBar.setIcon(DisplayUtils.getSeasonalIconId());
  actionBar.setDisplayHomeAsUpEnabled(true);
  actionBar.setTitle(R.string.actionbar_settings);
  mAccountsPrefCategory=(PreferenceCategory)findPreference("accounts_category");
  ListView listView=getListView();
  listView.setOnItemLongClickListener(new OnItemLongClickListener(){
    @Override public boolean onItemLongClick(    AdapterView<?> parent,    View view,    int position,    long id){
      ListView listView=(ListView)parent;
      ListAdapter listAdapter=listView.getAdapter();
      Object obj=listAdapter.getItem(position);
      if (obj != null && obj instanceof RadioButtonPreference) {
        mShowContextMenu=true;
        mAccountName=((RadioButtonPreference)obj).getKey();
        Preferences.this.openContextMenu(listView);
        View.OnLongClickListener longListener=(View.OnLongClickListener)obj;
        return longListener.onLongClick(view);
      }
      return false;
    }
  }
);
  String temp;
  try {
    PackageInfo pkg=getPackageManager().getPackageInfo(getPackageName(),0);
    temp=pkg.versionName;
  }
 catch (  NameNotFoundException e) {
    temp="";
    Log_OC.e(TAG,"Error while showing about dialog",e);
  }
  final String appVersion=temp;
  registerForContextMenu(getListView());
  pCode=(CheckBoxPreference)findPreference("set_pincode");
  if (pCode != null) {
    pCode.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
      @Override public boolean onPreferenceChange(      Preference preference,      Object newValue){
        Intent i=new Intent(getApplicationContext(),PinCodeActivity.class);
        i.putExtra(PinCodeActivity.EXTRA_ACTIVITY,"preferences");
        i.putExtra(PinCodeActivity.EXTRA_NEW_STATE,newValue.toString());
        startActivity(i);
        return true;
      }
    }
);
  }
  PreferenceCategory preferenceCategory=(PreferenceCategory)findPreference("more");
  boolean helpEnabled=getResources().getBoolean(R.bool.help_enabled);
  Preference pHelp=findPreference("help");
  if (pHelp != null) {
    if (helpEnabled) {
      pHelp.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          String helpWeb=(String)getText(R.string.url_help);
          if (helpWeb != null && helpWeb.length() > 0) {
            Uri uriUrl=Uri.parse(helpWeb);
            Intent intent=new Intent(Intent.ACTION_VIEW,uriUrl);
            startActivity(intent);
          }
          return true;
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pHelp);
    }
  }
  boolean recommendEnabled=getResources().getBoolean(R.bool.recommend_enabled);
  Preference pRecommend=findPreference("recommend");
  if (pRecommend != null) {
    if (recommendEnabled) {
      pRecommend.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          Intent intent=new Intent(Intent.ACTION_SENDTO);
          intent.setType("text/plain");
          intent.setData(Uri.parse(getString(R.string.mail_recommend)));
          intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
          String appName=getString(R.string.app_name);
          String downloadUrl=getString(R.string.url_app_download);
          Account currentAccount=AccountUtils.getCurrentOwnCloudAccount(Preferences.this);
          String username=currentAccount.name.substring(0,currentAccount.name.lastIndexOf('@'));
          String recommendSubject=String.format(getString(R.string.recommend_subject),appName);
          String recommendText=String.format(getString(R.string.recommend_text),appName,downloadUrl,username);
          intent.putExtra(Intent.EXTRA_SUBJECT,recommendSubject);
          intent.putExtra(Intent.EXTRA_TEXT,recommendText);
          startActivity(intent);
          return (true);
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pRecommend);
    }
  }
  boolean feedbackEnabled=getResources().getBoolean(R.bool.feedback_enabled);
  Preference pFeedback=findPreference("feedback");
  if (pFeedback != null) {
    if (feedbackEnabled) {
      pFeedback.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          String feedbackMail=(String)getText(R.string.mail_feedback);
          String feedback=(String)getText(R.string.prefs_feedback) + " - android v" + appVersion;
          Intent intent=new Intent(Intent.ACTION_SENDTO);
          intent.setType("text/plain");
          intent.putExtra(Intent.EXTRA_SUBJECT,feedback);
          intent.setData(Uri.parse(feedbackMail));
          intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
          startActivity(intent);
          return true;
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pFeedback);
    }
  }
  boolean imprintEnabled=getResources().getBoolean(R.bool.imprint_enabled);
  Preference pImprint=findPreference("imprint");
  if (pImprint != null) {
    if (imprintEnabled) {
      pImprint.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          String imprintWeb=(String)getText(R.string.url_imprint);
          if (imprintWeb != null && imprintWeb.length() > 0) {
            Uri uriUrl=Uri.parse(imprintWeb);
            Intent intent=new Intent(Intent.ACTION_VIEW,uriUrl);
            startActivity(intent);
          }
          return true;
        }
      }
);
    }
 else {
      preferenceCategory.removePreference(pImprint);
    }
  }
  mPrefInstantUploadPath=findPreference("instant_upload_path");
  if (mPrefInstantUploadPath != null) {
    mPrefInstantUploadPath.setOnPreferenceClickListener(new OnPreferenceClickListener(){
      @Override public boolean onPreferenceClick(      Preference preference){
        if (!mUploadPath.endsWith(OCFile.PATH_SEPARATOR)) {
          mUploadPath+=OCFile.PATH_SEPARATOR;
        }
        Intent intent=new Intent(Preferences.this,UploadPathActivity.class);
        intent.putExtra(UploadPathActivity.KEY_INSTANT_UPLOAD_PATH,mUploadPath);
        startActivityForResult(intent,ACTION_SELECT_UPLOAD_PATH);
        return true;
      }
    }
);
  }
  mPrefInstantUploadCategory=(PreferenceCategory)findPreference("instant_uploading_category");
  mPrefInstantUploadPathWiFi=findPreference("instant_upload_on_wifi");
  mPrefInstantUpload=findPreference("instant_uploading");
  toggleInstantPictureOptions(((CheckBoxPreference)mPrefInstantUpload).isChecked());
  mPrefInstantUpload.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      toggleInstantPictureOptions((Boolean)newValue);
      return true;
    }
  }
);
  mPrefInstantVideoUploadPath=findPreference("instant_video_upload_path");
  if (mPrefInstantVideoUploadPath != null) {
    mPrefInstantVideoUploadPath.setOnPreferenceClickListener(new OnPreferenceClickListener(){
      @Override public boolean onPreferenceClick(      Preference preference){
        if (!mUploadVideoPath.endsWith(OCFile.PATH_SEPARATOR)) {
          mUploadVideoPath+=OCFile.PATH_SEPARATOR;
        }
        Intent intent=new Intent(Preferences.this,UploadPathActivity.class);
        intent.putExtra(UploadPathActivity.KEY_INSTANT_UPLOAD_PATH,mUploadVideoPath);
        startActivityForResult(intent,ACTION_SELECT_UPLOAD_VIDEO_PATH);
        return true;
      }
    }
);
  }
  mPrefInstantVideoUploadPathWiFi=findPreference("instant_video_upload_on_wifi");
  mPrefInstantVideoUpload=findPreference("instant_video_uploading");
  toggleInstantVideoOptions(((CheckBoxPreference)mPrefInstantUpload).isChecked());
  mPrefInstantVideoUpload.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      toggleInstantVideoOptions((Boolean)newValue);
      return true;
    }
  }
);
  pAboutApp=(Preference)findPreference("about_app");
  if (pAboutApp != null) {
    pAboutApp.setTitle(String.format(getString(R.string.about_android),getString(R.string.app_name)));
    pAboutApp.setSummary(String.format(getString(R.string.about_version),appVersion));
  }
  loadInstantUploadPath();
  loadInstantUploadVideoPath();
}
