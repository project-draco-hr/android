{
  super.onCreate(savedInstanceState);
  mDbHandler=new DbHandler(getBaseContext());
  mSessions=new Vector<OwnCloudSession>();
  addPreferencesFromResource(R.xml.preferences);
  ActionBar actionBar=getSherlock().getActionBar();
  actionBar.setDisplayHomeAsUpEnabled(true);
  Preference p=findPreference("manage_account");
  if (p != null)   p.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      Intent i=new Intent(getApplicationContext(),AccountSelectActivity.class);
      startActivity(i);
      return true;
    }
  }
);
  pCode=(CheckBoxPreference)findPreference("set_pincode");
  if (pCode != null) {
    pCode.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
      @Override public boolean onPreferenceChange(      Preference preference,      Object newValue){
        Intent i=new Intent(getApplicationContext(),PinCodeActivity.class);
        i.putExtra(PinCodeActivity.EXTRA_ACTIVITY,"preferences");
        i.putExtra(PinCodeActivity.EXTRA_NEW_STATE,newValue.toString());
        startActivity(i);
        return true;
      }
    }
);
    pAboutApp=(Preference)findPreference("about_app");
    if (pAboutApp != null) {
      pAboutApp.setTitle(String.format(getString(R.string.about_android),getString(R.string.app_name)));
      PackageInfo pkg;
      try {
        pkg=getPackageManager().getPackageInfo(getPackageName(),0);
        pAboutApp.setSummary(String.format(getString(R.string.about_version),pkg.versionName));
      }
 catch (      NameNotFoundException e) {
        Log_OC.e(TAG,"Error while showing about dialog",e);
      }
    }
    pLogging=(CheckBoxPreference)findPreference("log_to_file");
    if (pLogging != null) {
      pLogging.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
        @Override public boolean onPreferenceChange(        Preference preference,        Object newValue){
          String logpath=Environment.getExternalStorageDirectory() + File.separator + "owncloud"+ File.separator+ "log";
          if (!pLogging.isChecked()) {
            Log_OC.d("Debug","start logging");
            Log_OC.v("PATH",logpath);
            Log_OC.startLogging(logpath);
          }
 else {
            Log_OC.d("Debug","stop logging");
            Log_OC.stopLogging();
          }
          return true;
        }
      }
);
    }
    pLoggingHistory=(Preference)findPreference("log_history");
    if (pLoggingHistory != null) {
      pLoggingHistory.setOnPreferenceClickListener(new OnPreferenceClickListener(){
        @Override public boolean onPreferenceClick(        Preference preference){
          Intent intent=new Intent(getApplicationContext(),LogHistoryActivity.class);
          startActivity(intent);
          return true;
        }
      }
);
    }
  }
}
