{
  double count=0;
  for (  OCFile file : mFiles) {
    if (file.isImage()) {
      count++;
    }
  }
  boolean fileView=true;
  if ((count / mFiles.size()) >= 0.8) {
    fileView=false;
  }
 else {
    fileView=true;
  }
  View view=convertView;
  OCFile file=null;
  LayoutInflater inflator=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  if (mFiles != null && mFiles.size() > position) {
    file=mFiles.get(position);
  }
  if (fileView) {
    view=inflator.inflate(R.layout.list_item,null);
  }
 else {
    if (file.isImage()) {
      view=inflator.inflate(R.layout.grid_image,null);
    }
 else {
      view=inflator.inflate(R.layout.grid_item,null);
    }
    View frame=view.findViewById(R.id.imageItemFrame);
    frame.setVisibility(View.GONE);
  }
  view.invalidate();
  if (file != null) {
    TextView fileName=(TextView)view.findViewById(R.id.Filename);
    String name=file.getFileName();
    fileName.setText(name);
    ImageView fileIcon=(ImageView)view.findViewById(R.id.imageView1);
    ImageView sharedIconV=(ImageView)view.findViewById(R.id.sharedIcon);
    ImageView sharedWithMeIconV=(ImageView)view.findViewById(R.id.sharedWithMeIcon);
    sharedWithMeIconV.setVisibility(View.GONE);
    ImageView localStateView=(ImageView)view.findViewById(R.id.imageView2);
    localStateView.bringToFront();
    FileDownloaderBinder downloaderBinder=mTransferServiceGetter.getFileDownloaderBinder();
    FileUploaderBinder uploaderBinder=mTransferServiceGetter.getFileUploaderBinder();
    if (downloaderBinder != null && downloaderBinder.isDownloading(mAccount,file)) {
      localStateView.setImageResource(R.drawable.downloading_file_indicator);
      localStateView.setVisibility(View.VISIBLE);
    }
 else     if (uploaderBinder != null && uploaderBinder.isUploading(mAccount,file)) {
      localStateView.setImageResource(R.drawable.uploading_file_indicator);
      localStateView.setVisibility(View.VISIBLE);
    }
 else     if (file.isDown()) {
      localStateView.setImageResource(R.drawable.local_file_indicator);
      localStateView.setVisibility(View.VISIBLE);
    }
 else {
      localStateView.setVisibility(View.INVISIBLE);
    }
    TextView fileSizeV=(TextView)view.findViewById(R.id.file_size);
    TextView lastModV=(TextView)view.findViewById(R.id.last_mod);
    ImageView checkBoxV=(ImageView)view.findViewById(R.id.custom_checkbox);
    if (!file.isFolder()) {
      fileSizeV.setVisibility(View.VISIBLE);
      fileSizeV.setText(DisplayUtils.bytesToHumanReadable(file.getFileLength()));
      lastModV.setVisibility(View.VISIBLE);
      lastModV.setText(DisplayUtils.unixTimeToHumanReadable(file.getModificationTimestamp()));
      if (!file.keepInSync()) {
        view.findViewById(R.id.imageView3).setVisibility(View.GONE);
      }
 else {
        view.findViewById(R.id.imageView3).setVisibility(View.VISIBLE);
      }
      GridView parentList=(GridView)parent;
      if (parentList.getChoiceMode() == GridView.CHOICE_MODE_NONE) {
        checkBoxV.setVisibility(View.GONE);
      }
 else {
        if (parentList.isItemChecked(position)) {
          checkBoxV.setImageResource(android.R.drawable.checkbox_on_background);
        }
 else {
          checkBoxV.setImageResource(android.R.drawable.checkbox_off_background);
        }
        checkBoxV.setVisibility(View.VISIBLE);
      }
      if (file.isImage() && file.isDown()) {
        Bitmap bitmap=BitmapFactory.decodeFile(file.getStoragePath());
        fileIcon.setImageBitmap(ThumbnailUtils.extractThumbnail(bitmap,100,100));
      }
 else {
        fileIcon.setImageResource(DisplayUtils.getResourceId(file.getMimetype(),file.getFileName()));
      }
      if (checkIfFileIsSharedWithMe(file)) {
        sharedWithMeIconV.setVisibility(View.VISIBLE);
      }
    }
 else {
      fileSizeV.setVisibility(View.INVISIBLE);
      lastModV.setVisibility(View.VISIBLE);
      lastModV.setText(DisplayUtils.unixTimeToHumanReadable(file.getModificationTimestamp()));
      checkBoxV.setVisibility(View.GONE);
      view.findViewById(R.id.imageView3).setVisibility(View.GONE);
      if (checkIfFileIsSharedWithMe(file)) {
        fileIcon.setImageResource(R.drawable.shared_with_me_folder);
        sharedWithMeIconV.setVisibility(View.VISIBLE);
      }
 else {
        fileIcon.setImageResource(DisplayUtils.getResourceId(file.getMimetype(),file.getFileName()));
      }
      if (file.isShareByLink()) {
        fileIcon.setImageResource(R.drawable.folder_public);
      }
    }
    if (file.isShareByLink()) {
      sharedIconV.setVisibility(View.VISIBLE);
    }
 else {
      sharedIconV.setVisibility(View.GONE);
    }
  }
  return view;
}
