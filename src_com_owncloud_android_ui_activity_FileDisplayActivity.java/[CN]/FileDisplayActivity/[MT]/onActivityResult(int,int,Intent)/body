{
  if (requestCode == REQUEST_CODE__SELECT_CONTENT_FROM_APPS && (resultCode == RESULT_OK || resultCode == UploadFilesActivity.RESULT_OK_AND_MOVE)) {
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN && data.getClipData() != null && data.getClipData().getItemCount() > 0) {
      for (int i=0; i < data.getClipData().getItemCount(); i++) {
        Intent intent=new Intent();
        intent.setData(data.getClipData().getItemAt(i).getUri());
        requestSimpleUpload(intent,resultCode);
      }
    }
 else {
      requestSimpleUpload(data,resultCode);
    }
  }
 else   if (requestCode == REQUEST_CODE__SELECT_MULTIPLE_FILES && (resultCode == RESULT_OK || resultCode == UploadFilesActivity.RESULT_OK_AND_MOVE)) {
    requestMultipleUpload(data,resultCode);
  }
 else   if (requestCode == REQUEST_CODE__MOVE_FILES && resultCode == RESULT_OK) {
    final Intent fData=data;
    final int fResultCode=resultCode;
    getHandler().postDelayed(new Runnable(){
      @Override public void run(){
        requestMoveOperation(fData,fResultCode);
      }
    }
,DELAY_TO_REQUEST_OPERATIONS_LATER);
  }
 else   if (requestCode == REQUEST_CODE__COPY_FILES && resultCode == RESULT_OK) {
    final Intent fData=data;
    final int fResultCode=resultCode;
    getHandler().postDelayed(new Runnable(){
      @Override public void run(){
        requestCopyOperation(fData,fResultCode);
      }
    }
,DELAY_TO_REQUEST_OPERATIONS_LATER);
  }
 else {
    super.onActivityResult(requestCode,resultCode,data);
  }
}
