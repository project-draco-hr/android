{
  Log_OC.d(TAG,"onCreate() start");
  super.onCreate(savedInstanceState);
  requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
  mHandler=new Handler();
  mUploadConnection=new ListServiceConnection();
  mDownloadConnection=new ListServiceConnection();
  bindService(new Intent(this,FileUploader.class),mUploadConnection,Context.BIND_AUTO_CREATE);
  bindService(new Intent(this,FileDownloader.class),mDownloadConnection,Context.BIND_AUTO_CREATE);
  if (getIntent().getAction() != null && getIntent().getAction().equals(Intent.ACTION_MAIN) && savedInstanceState == null) {
    requestPinCode();
  }
  Intent observer_intent=new Intent(this,FileObserverService.class);
  observer_intent.putExtra(FileObserverService.KEY_FILE_CMD,FileObserverService.CMD_INIT_OBSERVED_LIST);
  startService(observer_intent);
  if (savedInstanceState != null) {
    mWaitingToPreview=(OCFile)savedInstanceState.getParcelable(FileDisplayActivity.KEY_WAITING_TO_PREVIEW);
  }
 else {
    mWaitingToPreview=null;
  }
  setContentView(R.layout.files);
  mDualPane=getResources().getBoolean(R.bool.large_land_layout);
  mLeftFragmentContainer=findViewById(R.id.left_fragment_container);
  mRightFragmentContainer=findViewById(R.id.right_fragment_container);
  if (savedInstanceState == null) {
    createMinFragments();
  }
  mDirectories=new CustomArrayAdapter<String>(this,R.layout.sherlock_spinner_dropdown_item);
  getSupportActionBar().setHomeButtonEnabled(true);
  setSupportProgressBarIndeterminateVisibility(false);
  Log_OC.d(TAG,"onCreate() end");
}
