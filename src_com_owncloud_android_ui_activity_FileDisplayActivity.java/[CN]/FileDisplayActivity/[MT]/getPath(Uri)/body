{
  final boolean isKitKat=Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
  if (isKitKat && DocumentsContract.isDocumentUri(getApplicationContext(),uri)) {
    if (isExternalStorageDocument(uri)) {
      final String docId=DocumentsContract.getDocumentId(uri);
      final String[] split=docId.split(":");
      final String type=split[0];
      if ("primary".equalsIgnoreCase(type)) {
        return Environment.getExternalStorageDirectory() + "/" + split[1];
      }
    }
 else     if (isDownloadsDocument(uri)) {
      final String id=DocumentsContract.getDocumentId(uri);
      final Uri contentUri=ContentUris.withAppendedId(Uri.parse("content://downloads/public_downloads"),Long.valueOf(id));
      return getDataColumn(getApplicationContext(),contentUri,null,null);
    }
 else     if (isMediaDocument(uri)) {
      final String docId=DocumentsContract.getDocumentId(uri);
      final String[] split=docId.split(":");
      final String type=split[0];
      Uri contentUri=null;
      if ("image".equals(type)) {
        contentUri=MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
      }
 else       if ("video".equals(type)) {
        contentUri=MediaStore.Video.Media.EXTERNAL_CONTENT_URI;
      }
 else       if ("audio".equals(type)) {
        contentUri=MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
      }
      final String selection="_id=?";
      final String[] selectionArgs=new String[]{split[1]};
      return getDataColumn(getApplicationContext(),contentUri,selection,selectionArgs);
    }
  }
 else   if ("content".equalsIgnoreCase(uri.getScheme())) {
    if (isGooglePhotosUri(uri))     return uri.getLastPathSegment();
    return getDataColumn(getApplicationContext(),uri,null,null);
  }
 else   if ("file".equalsIgnoreCase(uri.getScheme())) {
    return uri.getPath();
  }
  return null;
}
