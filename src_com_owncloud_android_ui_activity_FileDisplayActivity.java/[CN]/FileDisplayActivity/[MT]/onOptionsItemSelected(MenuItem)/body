{
  boolean retval=true;
switch (item.getItemId()) {
case R.id.action_sync_account:
{
      startSynchronization();
      break;
    }
case android.R.id.home:
{
    FileFragment second=getSecondFragment();
    OCFile currentDir=getCurrentDir();
    if (mDrawerLayout.isDrawerOpen(GravityCompat.START)) {
      mDrawerLayout.closeDrawer(GravityCompat.START);
    }
 else     if ((currentDir != null && currentDir.getParentId() != 0) || (second != null && second.getFile() != null)) {
      onBackPressed();
    }
 else {
      mDrawerLayout.openDrawer(GravityCompat.START);
    }
    break;
  }
case R.id.action_sort:
{
  SharedPreferences appPreferences=PreferenceManager.getDefaultSharedPreferences(this);
  Integer sortOrder=appPreferences.getInt("sortOrder",FileStorageUtils.SORT_NAME);
  AlertDialog.Builder builder=new AlertDialog.Builder(this);
  builder.setTitle(R.string.actionbar_sort_title).setSingleChoiceItems(R.array.actionbar_sortby,sortOrder,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
switch (which) {
case 0:
        sortByName(true);
      break;
case 1:
    sortByDate(false);
  break;
}
dialog.dismiss();
}
}
);
builder.create().show();
break;
}
case R.id.action_switch_view:
{
if (isGridView()) {
item.setTitle(getString(R.string.action_switch_grid_view));
item.setIcon(ContextCompat.getDrawable(getApplicationContext(),R.drawable.ic_view_module));
getListOfFilesFragment().setListAsPreferred();
}
 else {
item.setTitle(getApplicationContext().getString(R.string.action_switch_list_view));
item.setIcon(ContextCompat.getDrawable(getApplicationContext(),R.drawable.ic_view_list));
getListOfFilesFragment().setGridAsPreferred();
}
return true;
}
default :
retval=super.onOptionsItemSelected(item);
}
return retval;
}
