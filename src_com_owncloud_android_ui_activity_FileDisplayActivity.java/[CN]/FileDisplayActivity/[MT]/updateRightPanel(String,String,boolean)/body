{
  Fragment fragment=getSupportFragmentManager().findFragmentByTag(FileDetailFragment.FTAG);
  boolean waitedPreview=(mWaitingToPreview != null && mWaitingToPreview.getRemotePath().equals(downloadedRemotePath));
  if (fragment != null && fragment instanceof FileDetailFragment) {
    FileDetailFragment detailsFragment=(FileDetailFragment)fragment;
    OCFile fileInFragment=detailsFragment.getFile();
    if (fileInFragment != null && !downloadedRemotePath.equals(fileInFragment.getRemotePath())) {
      mWaitingToPreview=null;
    }
 else     if (downloadEvent.equals(FileDownloader.DOWNLOAD_ADDED_MESSAGE)) {
      detailsFragment.listenForTransferProgress();
      detailsFragment.updateFileDetails(true,false);
    }
 else     if (downloadEvent.equals(FileDownloader.DOWNLOAD_FINISH_MESSAGE)) {
      if (success && waitedPreview) {
        mWaitingToPreview=mStorageManager.getFileById(mWaitingToPreview.getFileId());
        if (PreviewMediaFragment.canBePreviewed(mWaitingToPreview)) {
          FragmentTransaction transaction=getSupportFragmentManager().beginTransaction();
          transaction.replace(R.id.file_details_container,new PreviewMediaFragment(mWaitingToPreview,getAccount(),0,true),FileDetailFragment.FTAG);
          transaction.commit();
        }
 else {
          detailsFragment.updateFileDetails(false,(success));
          openFile(mWaitingToPreview);
        }
        mWaitingToPreview=null;
      }
 else {
        detailsFragment.updateFileDetails(false,(success));
      }
    }
  }
}
