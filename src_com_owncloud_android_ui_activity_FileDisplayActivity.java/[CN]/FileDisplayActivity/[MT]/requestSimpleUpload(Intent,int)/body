{
  String filePath=null;
  String mimeType=null;
  Uri selectedImageUri=data.getData();
  try {
    mimeType=getContentResolver().getType(selectedImageUri);
    String fileManagerString=selectedImageUri.getPath();
    String selectedImagePath=UriUtils.getLocalPath(selectedImageUri,this);
    if (selectedImagePath != null)     filePath=selectedImagePath;
 else     filePath=fileManagerString;
  }
 catch (  Exception e) {
    Log_OC.e(TAG,"Unexpected exception when trying to read the result of " + "Intent.ACTION_GET_CONTENT",e);
  }
 finally {
    if (filePath == null) {
      Log_OC.e(TAG,"Couldn't resolve path to file");
      Toast t=Toast.makeText(this,getString(R.string.filedisplay_unexpected_bad_get_content),Toast.LENGTH_LONG);
      t.show();
      return;
    }
  }
  Intent i=new Intent(this,FileUploader.class);
  i.putExtra(FileUploader.KEY_ACCOUNT,getAccount());
  OCFile currentDir=getCurrentDir();
  String remotePath=(currentDir != null) ? currentDir.getRemotePath() : OCFile.ROOT_PATH;
  if (selectedImageUri.toString().startsWith(UriUtils.URI_CONTENT_SCHEME)) {
    Toast.makeText(this,R.string.common_error_unknown,Toast.LENGTH_SHORT).show();
    return;
  }
 else {
    remotePath+=new File(filePath).getName();
  }
  int behaviour=(resultCode == UploadFilesActivity.RESULT_OK_AND_MOVE) ? FileUploader.LOCAL_BEHAVIOUR_MOVE : FileUploader.LOCAL_BEHAVIOUR_COPY;
  FileUploader.UploadRequester requester=new FileUploader.UploadRequester();
  requester.uploadNewFile(this,getAccount(),filePath,remotePath,behaviour,mimeType,false,UploadFileOperation.CREATED_BY_USER);
}
