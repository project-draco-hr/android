{
  String filepath=null;
  try {
    Uri selectedImageUri=data.getData();
    String filemanagerstring=selectedImageUri.getPath();
    String selectedImagePath=getPath(selectedImageUri);
    if (selectedImagePath != null)     filepath=selectedImagePath;
 else     filepath=filemanagerstring;
  }
 catch (  Exception e) {
    Log_OC.e(TAG,"Unexpected exception when trying to read the result of Intent.ACTION_GET_CONTENT",e);
    e.printStackTrace();
  }
 finally {
    if (filepath == null) {
      Log_OC.e(TAG,"Couldnt resolve path to file");
      Toast t=Toast.makeText(this,getString(R.string.filedisplay_unexpected_bad_get_content),Toast.LENGTH_LONG);
      t.show();
      return;
    }
  }
  Intent i=new Intent(this,FileUploadService.class);
  i.putExtra(FileUploadService.KEY_ACCOUNT,getAccount());
  String remotepath=new String();
  for (int j=mDirectories.getCount() - 2; j >= 0; --j) {
    remotepath+=OCFile.PATH_SEPARATOR + mDirectories.getItem(j);
  }
  if (!remotepath.endsWith(OCFile.PATH_SEPARATOR))   remotepath+=OCFile.PATH_SEPARATOR;
  remotepath+=new File(filepath).getName();
  i.putExtra(FileUploadService.KEY_LOCAL_FILE,filepath);
  i.putExtra(FileUploadService.KEY_REMOTE_FILE,remotepath);
  i.putExtra(FileUploadService.KEY_UPLOAD_TYPE,FileUploadService.UPLOAD_SINGLE_FILE);
  if (resultCode == UploadFilesActivity.RESULT_OK_AND_MOVE)   i.putExtra(FileUploadService.KEY_LOCAL_BEHAVIOUR,FileUploadService.LOCAL_BEHAVIOUR_MOVE);
  startService(i);
}
