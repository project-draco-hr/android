{
  try {
    String uploadedRemotePath=intent.getStringExtra(FileUploader.EXTRA_REMOTE_PATH);
    String accountName=intent.getStringExtra(FileUploader.ACCOUNT_NAME);
    boolean sameAccount=getAccount() != null && accountName.equals(getAccount().name);
    OCFile currentDir=getCurrentDir();
    boolean isDescendant=(currentDir != null) && (uploadedRemotePath != null) && (uploadedRemotePath.startsWith(currentDir.getRemotePath()));
    boolean renamedInUpload=getFile().getRemotePath().equals(intent.getStringExtra(FileUploader.EXTRA_OLD_REMOTE_PATH));
    boolean sameFile=renamedInUpload || getFile().getRemotePath().equals(uploadedRemotePath);
    boolean success=intent.getBooleanExtra(FileUploader.EXTRA_UPLOAD_RESULT,false);
    if (sameAccount && isDescendant) {
      String linkedToRemotePath=intent.getStringExtra(FileUploader.EXTRA_LINKED_TO_PATH);
      if (linkedToRemotePath == null || isAscendant(linkedToRemotePath)) {
        refreshListOfFilesFragment(true);
      }
    }
    if (sameAccount && sameFile) {
      if (success) {
        setFile(getStorageManager().getFileByPath(uploadedRemotePath));
      }
      refreshSecondFragment(intent.getAction(),success);
      if (renamedInUpload) {
        String newName=(new File(uploadedRemotePath)).getName();
        Toast msg=Toast.makeText(context,String.format(getString(R.string.filedetails_renamed_in_upload_msg),newName),Toast.LENGTH_LONG);
        msg.show();
      }
    }
  }
  finally {
    if (intent != null) {
      removeStickyBroadcast(intent);
    }
  }
}
