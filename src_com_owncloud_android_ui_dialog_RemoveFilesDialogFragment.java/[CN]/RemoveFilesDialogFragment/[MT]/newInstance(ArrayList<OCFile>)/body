{
  RemoveFilesDialogFragment frag=new RemoveFilesDialogFragment();
  Bundle args=new Bundle();
  int messageStringId=R.string.confirmation_remove_files_alert;
  int posBtn=R.string.confirmation_remove_file_remote;
  int negBtn=-1;
  boolean containsFolder=false;
  boolean containsDown=false;
  for (  OCFile file : files) {
    if (file.isFolder())     containsFolder=true;
    if (file.isDown())     containsDown=true;
  }
  if (containsFolder) {
    messageStringId=R.string.confirmation_remove_folders_alert;
    posBtn=R.string.confirmation_remove_remote_and_local;
    negBtn=R.string.confirmation_remove_local;
  }
 else   if (containsDown) {
    posBtn=R.string.confirmation_remove_remote_and_local;
    negBtn=R.string.confirmation_remove_local;
  }
  args.putInt(ARG_MESSAGE_RESOURCE_ID,messageStringId);
  args.putStringArray(ARG_MESSAGE_ARGUMENTS,new String[]{MainApp.getAppContext().getString(R.string.confirmation_remove_files)});
  args.putInt(ARG_POSITIVE_BTN_RES,posBtn);
  args.putInt(ARG_NEUTRAL_BTN_RES,R.string.common_no);
  args.putInt(ARG_NEGATIVE_BTN_RES,negBtn);
  args.putParcelableArrayList(ARG_TARGET_FILES,files);
  frag.setArguments(args);
  return frag;
}
