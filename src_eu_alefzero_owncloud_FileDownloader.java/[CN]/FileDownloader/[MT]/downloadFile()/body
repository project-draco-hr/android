{
  AccountManager am=(AccountManager)getSystemService(ACCOUNT_SERVICE);
  Uri oc_url=Uri.parse(am.getUserData(mAccount,AccountAuthenticator.KEY_OC_URL));
  WebdavClient wdc=new WebdavClient(oc_url);
  String username=mAccount.name.split("@")[0];
  String password="";
  try {
    password=am.blockingGetAuthToken(mAccount,AccountAuthenticator.AUTH_TOKEN_TYPE,true);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  wdc.setCredentials(username,password);
  wdc.allowUnsignedCertificates();
  Notification n=new Notification(R.drawable.icon,"Downloading file",System.currentTimeMillis());
  PendingIntent pi=PendingIntent.getActivity(this,1,new Intent(this,FileDisplayActivity.class),0);
  n.setLatestEventInfo(this,"Downloading file","Downloading file " + mFilePath,pi);
  nm.notify(1,n);
  File sdCard=Environment.getExternalStorageDirectory();
  File dir=new File(sdCard.getAbsolutePath() + "/owncloud");
  dir.mkdirs();
  File file=new File(dir,mFilePath.replace('/','.'));
  Log.e(TAG,file.getAbsolutePath() + " " + oc_url.toString());
  wdc.downloadFile(mFilePath,file);
  ContentValues cv=new ContentValues();
  cv.put(ProviderTableMeta.FILE_STORAGE_PATH,file.getAbsolutePath());
  getContentResolver().update(ProviderTableMeta.CONTENT_URI,cv,ProviderTableMeta.FILE_NAME + "=? AND " + ProviderTableMeta.FILE_ACCOUNT_OWNER+ "=?",new String[]{mFilePath.substring(mFilePath.lastIndexOf('/') + 1),mAccount.name});
  nm.cancel(1);
  Intent end=new Intent(DOWNLOAD_FINISH_MESSAGE);
  sendBroadcast(end);
}
