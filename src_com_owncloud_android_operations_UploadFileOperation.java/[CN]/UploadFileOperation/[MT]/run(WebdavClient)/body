{
  RemoteOperationResult result=null;
  boolean localCopyPassed=false, nameCheckPassed=false;
  File temporalFile=null, originalFile=null;
  String originalStoragePath=mFile.getStoragePath();
  try {
    if (!mForceOverwrite) {
      String remotePath=getAvailableRemotePath(client,mRemotePath);
      mWasRenamed=!remotePath.equals(mRemotePath);
      if (mWasRenamed) {
        createNewOCFile(remotePath);
      }
    }
    nameCheckPassed=true;
    String targetLocalPath=FileStorageUtils.getDefaultSavePathFor(mAccount.name,mFile);
    if (!originalStoragePath.equals(targetLocalPath)) {
      File ocLocalFolder=new File(FileStorageUtils.getSavePath(mAccount.name));
      originalFile=new File(originalStoragePath);
      if (!mMoveLocalFile) {
        if (ocLocalFolder.getUsableSpace() < originalFile.length()) {
          result=new RemoteOperationResult(ResultCode.LOCAL_STORAGE_FULL);
          return result;
        }
 else {
          String temporalPath=FileStorageUtils.getTemporalPath(mAccount.name) + mFile.getRemotePath();
          mFile.setStoragePath(temporalPath);
          temporalFile=new File(temporalPath);
          if (!originalStoragePath.equals(temporalPath)) {
            InputStream in=new FileInputStream(originalFile);
            OutputStream out=new FileOutputStream(temporalFile);
            byte[] buf=new byte[1024];
            int len;
            while ((len=in.read(buf)) > 0) {
              out.write(buf,0,len);
            }
            in.close();
            out.close();
          }
        }
      }
    }
    localCopyPassed=true;
synchronized (mCancellationRequested) {
      if (mCancellationRequested.get()) {
        throw new OperationCancelledException();
      }
 else {
        mPutMethod=new PutMethod(client.getBaseUri() + WebdavUtils.encodePath(mFile.getRemotePath()));
      }
    }
    int status=uploadFile(client);
    if (isSuccess(status)) {
      File fileToMove=null;
      if (temporalFile != null) {
        fileToMove=temporalFile;
      }
 else       if (originalFile != null) {
        fileToMove=originalFile;
      }
      if (fileToMove != null) {
        mFile.setStoragePath(FileStorageUtils.getDefaultSavePathFor(mAccount.name,mFile));
        File finalFile=new File(mFile.getStoragePath());
        if (!fileToMove.renameTo(finalFile)) {
          result=new RemoteOperationResult(ResultCode.LOCAL_STORAGE_NOT_MOVED);
        }
      }
    }
    if (result == null)     result=new RemoteOperationResult(isSuccess(status),status);
  }
 catch (  Exception e) {
    if (mCancellationRequested.get()) {
      result=new RemoteOperationResult(new OperationCancelledException());
    }
 else {
      result=new RemoteOperationResult(e);
    }
  }
 finally {
    if (temporalFile != null && !originalFile.equals(temporalFile)) {
      temporalFile.delete();
    }
    if (result.isSuccess()) {
      Log.i(TAG,"Upload of " + originalStoragePath + " to "+ mRemotePath+ ": "+ result.getLogMessage());
    }
 else {
      if (result.getException() != null) {
        String complement="";
        if (!nameCheckPassed) {
          complement=" (while checking file existence in server)";
        }
 else         if (!localCopyPassed) {
          complement=" (while copying local file to " + FileStorageUtils.getSavePath(mAccount.name) + ")";
        }
        Log.e(TAG,"Upload of " + originalStoragePath + " to "+ mRemotePath+ ": "+ result.getLogMessage()+ complement,result.getException());
      }
 else {
        Log.e(TAG,"Upload of " + originalStoragePath + " to "+ mRemotePath+ ": "+ result.getLogMessage());
      }
    }
  }
  return result;
}
