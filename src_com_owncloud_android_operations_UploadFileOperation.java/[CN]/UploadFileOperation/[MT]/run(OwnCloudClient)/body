{
  mCancellationRequested.set(false);
  mUploadStarted.set(true);
  RemoteOperationResult result=null;
  File temporalFile=null, originalFile=new File(mOriginalStoragePath), expectedFile=null;
  try {
    String remoteParentPath=new File(getRemotePath()).getParent();
    remoteParentPath=remoteParentPath.endsWith(OCFile.PATH_SEPARATOR) ? remoteParentPath : remoteParentPath + OCFile.PATH_SEPARATOR;
    RemoteOperationResult grantResult=grantFolderExistence(remoteParentPath,client);
    if (!grantResult.isSuccess()) {
      return result;
    }
    OCFile parent=getStorageManager().getFileByPath(remoteParentPath);
    mFile.setParentId(parent.getFileId());
    Log_OC.d(TAG,"Checking name collision in server");
    if (!mForceOverwrite) {
      String remotePath=getAvailableRemotePath(client,mRemotePath);
      mWasRenamed=!remotePath.equals(mRemotePath);
      if (mWasRenamed) {
        createNewOCFile(remotePath);
        Log_OC.d(TAG,"File renamed as " + remotePath);
      }
    }
    if (mCancellationRequested.get()) {
      throw new OperationCancelledException();
    }
    String expectedPath=FileStorageUtils.getDefaultSavePathFor(mAccount.name,mFile);
    expectedFile=new File(expectedPath);
    if (mLocalBehaviour == FileUploader.LOCAL_BEHAVIOUR_COPY && !mOriginalStoragePath.equals(expectedPath)) {
      String temporalPath=FileStorageUtils.getTemporalPath(mAccount.name) + mFile.getRemotePath();
      mFile.setStoragePath(temporalPath);
      temporalFile=new File(temporalPath);
      result=copy(originalFile,temporalFile);
      if (result != null) {
        return result;
      }
    }
    if (mCancellationRequested.get()) {
      throw new OperationCancelledException();
    }
    if (mChunked && (new File(mFile.getStoragePath())).length() > ChunkedUploadRemoteFileOperation.CHUNK_SIZE) {
      mUploadOperation=new ChunkedUploadRemoteFileOperation(mFile.getStoragePath(),mFile.getRemotePath(),mFile.getMimetype(),mFile.getEtagInConflict());
    }
 else {
      mUploadOperation=new UploadRemoteFileOperation(mFile.getStoragePath(),mFile.getRemotePath(),mFile.getMimetype(),mFile.getEtagInConflict());
    }
    Iterator<OnDatatransferProgressListener> listener=mDataTransferListeners.iterator();
    while (listener.hasNext()) {
      mUploadOperation.addDatatransferProgressListener(listener.next());
    }
    if (mCancellationRequested.get()) {
      throw new OperationCancelledException();
    }
    result=mUploadOperation.execute(client);
    if (result.isSuccess()) {
      if (mLocalBehaviour == FileUploader.LOCAL_BEHAVIOUR_FORGET) {
        mFile.setStoragePath("");
      }
 else {
        mFile.setStoragePath(expectedPath);
        File fileToMove;
        if (temporalFile != null) {
          fileToMove=temporalFile;
        }
 else {
          fileToMove=originalFile;
        }
        move(fileToMove,expectedFile);
      }
      FileDataStorageManager.triggerMediaScan(originalFile.getAbsolutePath());
      FileDataStorageManager.triggerMediaScan(expectedFile.getAbsolutePath());
    }
 else     if (result.getHttpCode() == HttpStatus.SC_PRECONDITION_FAILED) {
      result=new RemoteOperationResult(ResultCode.SYNC_CONFLICT);
    }
  }
 catch (  Exception e) {
    result=new RemoteOperationResult(e);
  }
 finally {
    mUploadStarted.set(false);
    if (temporalFile != null && !originalFile.equals(temporalFile)) {
      temporalFile.delete();
    }
    if (result == null) {
      result=new RemoteOperationResult(ResultCode.UNKNOWN_ERROR);
    }
    if (result.isSuccess()) {
      Log_OC.i(TAG,"Upload of " + mOriginalStoragePath + " to "+ mRemotePath+ ": "+ result.getLogMessage());
    }
 else {
      if (result.getException() != null) {
        if (result.isCancelled()) {
          Log_OC.w(TAG,"Upload of " + mOriginalStoragePath + " to "+ mRemotePath+ ": "+ result.getLogMessage());
        }
 else {
          Log_OC.e(TAG,"Upload of " + mOriginalStoragePath + " to "+ mRemotePath+ ": "+ result.getLogMessage(),result.getException());
        }
      }
 else {
        Log_OC.e(TAG,"Upload of " + mOriginalStoragePath + " to "+ mRemotePath+ ": "+ result.getLogMessage());
      }
    }
  }
  if (result.isSuccess()) {
    saveUploadedFile(client);
  }
 else   if (result.getCode() == ResultCode.SYNC_CONFLICT) {
    getStorageManager().saveConflict(mFile,mFile.getEtagInConflict());
  }
  return result;
}
