{
  Bitmap result=null;
  if (params.length != 1)   return result;
  String storagePath=params[0];
  InputStream is=null;
  try {
    if (isCancelled())     return result;
    File picture=new File(storagePath);
    if (picture != null) {
      is=new FlushedInputStream(new BufferedInputStream(new FileInputStream(picture)));
      result=BitmapFactory.decodeStream(is);
    }
    if (isCancelled())     return result;
    if (result == null) {
      mErrorMessageId=R.string.preview_image_error_unknown_format;
      Log_OC.e(TAG,"File could not be loaded as a bitmap: " + storagePath);
    }
 else {
      result=BitmapUtils.rotateImage(result,storagePath);
    }
  }
 catch (  OutOfMemoryError e) {
    Log_OC.w(TAG,"Out of memory rendering file " + storagePath + " in full size; scaling down");
    if (isCancelled())     return result;
    result=loadScaledImage(storagePath);
    if (result == null) {
      mErrorMessageId=R.string.preview_image_error_unknown_format;
      Log_OC.e(TAG,"File could not be loaded as a bitmap: " + storagePath);
    }
 else {
      result=BitmapUtils.rotateImage(result,storagePath);
    }
  }
catch (  NoSuchFieldError e) {
    mErrorMessageId=R.string.common_error_unknown;
    Log_OC.e(TAG,"Error from access to unexisting field despite protection; file " + storagePath,e);
  }
catch (  Throwable t) {
    mErrorMessageId=R.string.common_error_unknown;
    Log_OC.e(TAG,"Unexpected error loading " + getFile().getStoragePath(),t);
  }
 finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      IOException e) {
        Log_OC.e(TAG,"Unexpected exception closing stream; trying to continue ",e);
      }
    }
  }
  return result;
}
