{
  final ListAdapter adapter=mAdapter;
  if (adapter == null) {
    return mDropDownList.getListPaddingTop() + mDropDownList.getListPaddingBottom();
  }
  int returnedHeight=mDropDownList.getListPaddingTop() + mDropDownList.getListPaddingBottom();
  final int dividerHeight=((mDropDownList.getDividerHeight() > 0) && mDropDownList.getDivider() != null) ? mDropDownList.getDividerHeight() : 0;
  int prevHeightWithoutPartialChild=0;
  int i;
  View child;
  endPosition=(endPosition == -1) ? adapter.getCount() - 1 : endPosition;
  for (i=startPosition; i <= endPosition; ++i) {
    child=mAdapter.getView(i,null,mDropDownList);
    if (mDropDownList.getCacheColorHint() != 0) {
      child.setDrawingCacheBackgroundColor(mDropDownList.getCacheColorHint());
    }
    measureScrapChild(child,i,widthMeasureSpec);
    if (i > 0) {
      returnedHeight+=dividerHeight;
    }
    returnedHeight+=child.getMeasuredHeight();
    if (returnedHeight >= maxHeight) {
      return (disallowPartialChildPosition >= 0) && (i > disallowPartialChildPosition) && (prevHeightWithoutPartialChild > 0)&& (returnedHeight != maxHeight) ? prevHeightWithoutPartialChild : maxHeight;
    }
    if ((disallowPartialChildPosition >= 0) && (i >= disallowPartialChildPosition)) {
      prevHeightWithoutPartialChild=returnedHeight;
    }
  }
  return returnedHeight;
}
