{
  Dialog dialog=null;
switch (id) {
case DIALOG_LOGIN_PROGRESS:
{
      ProgressDialog working_dialog=new ProgressDialog(this);
      working_dialog.setMessage(getResources().getString(R.string.auth_trying_to_login));
      working_dialog.setIndeterminate(true);
      working_dialog.setCancelable(true);
      working_dialog.setOnCancelListener(new DialogInterface.OnCancelListener(){
        @Override public void onCancel(        DialogInterface dialog){
          Log.i(TAG,"Login canceled");
          if (mAuthThread != null) {
            mAuthThread.interrupt();
            finish();
          }
        }
      }
);
      dialog=working_dialog;
      break;
    }
case OAUTH2_LOGIN_PROGRESS:
{
    ProgressDialog working_dialog=new ProgressDialog(this);
    try {
      working_dialog.setMessage(String.format(getString(R.string.oauth_code_validation_message),codeResponseJson.getString(OAuth2GetCodeRunnable.CODE_VERIFICATION_URL),codeResponseJson.getString(OAuth2GetCodeRunnable.CODE_USER_CODE)));
    }
 catch (    JSONException e) {
      Log.e(TAG,"onCreateDialog->JSONException: " + e.toString());
    }
    working_dialog.setIndeterminate(true);
    working_dialog.setCancelable(true);
    working_dialog.setOnCancelListener(new DialogInterface.OnCancelListener(){
      @Override public void onCancel(      DialogInterface dialog){
        Log.i(TAG,"Login canceled");
        if (mOAuth2GetCodeThread != null) {
          mOAuth2GetCodeThread.interrupt();
          finish();
        }
        if (tokenReceiver != null) {
          unregisterReceiver(tokenReceiver);
          tokenReceiver=null;
          finish();
        }
      }
    }
);
    dialog=working_dialog;
    break;
  }
case DIALOG_SSL_VALIDATOR:
{
  dialog=SslValidatorDialog.newInstance(this,mLastSslUntrustedServerResult,this);
  break;
}
case DIALOG_CERT_NOT_SAVED:
{
AlertDialog.Builder builder=new AlertDialog.Builder(this);
builder.setMessage(getResources().getString(R.string.ssl_validator_not_saved));
builder.setCancelable(false);
builder.setPositiveButton(R.string.common_ok,new DialogInterface.OnClickListener(){
  @Override public void onClick(  DialogInterface dialog,  int which){
    dialog.dismiss();
  }
}
);
dialog=builder.create();
break;
}
default :
Log.e(TAG,"Incorrect dialog called with id = " + id);
}
return dialog;
}
