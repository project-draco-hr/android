{
  Dialog dialog=null;
switch (id) {
case DIALOG_LOGIN_PROGRESS:
{
      ProgressDialog working_dialog=new ProgressDialog(this);
      working_dialog.setMessage(getResources().getString(R.string.auth_trying_to_login));
      working_dialog.setIndeterminate(true);
      working_dialog.setCancelable(true);
      working_dialog.setOnCancelListener(new DialogInterface.OnCancelListener(){
        @Override public void onCancel(        DialogInterface dialog){
          Log.i(TAG,"Login canceled");
          if (mAuthThread != null) {
            mAuthThread.interrupt();
            finish();
          }
        }
      }
);
      dialog=working_dialog;
      break;
    }
case DIALOG_SSL_VALIDATOR:
{
    SslValidatorDialog sslValidator=SslValidatorDialog.newInstance(this,mLastSslFailedResult,this);
    if (sslValidator != null)     dialog=sslValidator;
    break;
  }
case DIALOG_CERT_NOT_SAVED:
{
  AlertDialog.Builder builder=new AlertDialog.Builder(this);
  builder.setMessage(getResources().getString(R.string.ssl_validator_not_saved));
  builder.setCancelable(false);
  builder.setPositiveButton(R.string.common_ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      dialog.dismiss();
    }
  }
);
  dialog=builder.create();
  break;
}
default :
Log.e(TAG,"Incorrect dialog called with id = " + id);
}
return dialog;
}
