{
  LayoutInflater inflator=(LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  if (mAll.size() > position) {
    if (mAll.get(position) instanceof NavigationDrawerItem) {
      NavigationDrawerItem navItem=(NavigationDrawerItem)mAll.get(position);
      View view=inflator.inflate(R.layout.drawer_list_item,null);
      view.setMinimumHeight(40);
      LinearLayout itemLayout=(LinearLayout)view.findViewById(R.id.itemLayout);
      itemLayout.setContentDescription(navItem.getContentDescription());
      TextView itemText=(TextView)view.findViewById(R.id.itemTitle);
      itemText.setText(navItem.getTitle());
      return view;
    }
    if (mAll.get(position) instanceof Account[]) {
      final View view=inflator.inflate(R.layout.drawer_account_group,null);
      final RadioGroup group=(RadioGroup)view.findViewById(R.id.drawer_radio_group);
      for (      Account account : mAccounts) {
        RadioButton rb=new RadioButton(mContext);
        rb.setText(account.name);
        rb.setContentDescription(account.name);
        try {
          byte[] bytesOfMessage=account.name.substring(0,5).getBytes("UTF-8");
          MessageDigest md=MessageDigest.getInstance("MD5");
          byte[] digest=md.digest(bytesOfMessage);
          int result=Math.abs(ByteBuffer.wrap(digest).getInt());
          Log_OC.d(TAG,"Integer: " + result % 100000);
          Log_OC.d(TAG,"length: " + digest.length);
          Double hue=(result % 100000) / 99999.0;
          Log_OC.d(TAG,"hue: " + hue);
          int[] rgb=BitmapUtils.hslToRgb(hue,0.9,0.65);
          rb.setTextColor(Color.rgb(rgb[0],rgb[1],rgb[2]));
          Log_OC.d(TAG,"Color: " + rgb[0] + " "+ rgb[1]+ rgb[2]);
        }
 catch (        Exception e) {
          Log_OC.d(TAG,e.toString());
          rb.setTextColor(mContext.getResources().getColor(R.color.black));
        }
        RadioGroup.LayoutParams params=new RadioGroup.LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT);
        params.weight=1.0f;
        params.setMargins(15,5,5,5);
        if (account.name.equals(mCurrentAccount.name)) {
          rb.setChecked(true);
        }
 else {
          rb.setChecked(false);
        }
        group.addView(rb,params);
      }
      group.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener(){
        public void onCheckedChanged(        RadioGroup group,        int checkedId){
          RadioButton rb=(RadioButton)view.findViewById(checkedId);
          AccountUtils.setCurrentOwnCloudAccount(mContext,rb.getText().toString());
          notifyDataSetChanged();
          mFileDisplayActivity.closeDrawer();
          mFileDisplayActivity.restart();
        }
      }
);
      return view;
    }
  }
  return convertView;
}
