{
  AccountManager am=AccountManager.get(getActivity());
  Account account=AccountUtils.getCurrentOwnCloudAccount(getActivity());
  OwnCloudVersion ocv=new OwnCloudVersion(am.getUserData(account,AccountAuthenticator.KEY_OC_VERSION));
  String url=am.getUserData(account,AccountAuthenticator.KEY_OC_BASE_URL) + AccountUtils.getWebdavPath(ocv);
  Log_OC.d("share","sharing for version " + ocv.toString());
  if (ocv.compareTo(new OwnCloudVersion(0x040000)) >= 0) {
    String APPS_PATH="/apps/files_sharing/";
    String SHARE_PATH="ajax/share.php";
    String SHARED_PATH="/apps/files_sharing/get.php?token=";
    final String WEBDAV_SCRIPT="webdav.php";
    final String WEBDAV_FILES_LOCATION="/files/";
    WebdavClient wc=OwnCloudClientUtils.createOwnCloudClient(account,getActivity().getApplicationContext());
    HttpConnectionManagerParams params=new HttpConnectionManagerParams();
    params.setMaxConnectionsPerHost(wc.getHostConfiguration(),5);
    PostMethod post=new PostMethod(am.getUserData(account,AccountAuthenticator.KEY_OC_BASE_URL) + APPS_PATH + SHARE_PATH);
    post.addRequestHeader("Content-type","application/x-www-form-urlencoded; charset=UTF-8");
    post.addRequestHeader("Referer",am.getUserData(account,AccountAuthenticator.KEY_OC_BASE_URL));
    List<NameValuePair> formparams=new ArrayList<NameValuePair>();
    Log_OC.d("share",mPath + "");
    formparams.add(new BasicNameValuePair("sources",mPath));
    formparams.add(new BasicNameValuePair("uid_shared_with","public"));
    formparams.add(new BasicNameValuePair("permissions","0"));
    post.setRequestEntity(new StringRequestEntity(URLEncodedUtils.format(formparams,HTTP.UTF_8)));
    int status;
    try {
      PropFindMethod find=new PropFindMethod(url + "/");
      find.addRequestHeader("Referer",am.getUserData(account,AccountAuthenticator.KEY_OC_BASE_URL));
      Log_OC.d("sharer","" + url + "/");
      for (      org.apache.commons.httpclient.Header a : find.getRequestHeaders()) {
        Log_OC.d("sharer-h",a.getName() + ":" + a.getValue());
      }
      int status2=wc.executeMethod(find);
      Log_OC.d("sharer","propstatus " + status2);
      GetMethod get=new GetMethod(am.getUserData(account,AccountAuthenticator.KEY_OC_BASE_URL) + "/");
      get.addRequestHeader("Referer",am.getUserData(account,AccountAuthenticator.KEY_OC_BASE_URL));
      status2=wc.executeMethod(get);
      Log_OC.d("sharer","getstatus " + status2);
      Log_OC.d("sharer","" + get.getResponseBodyAsString());
      for (      org.apache.commons.httpclient.Header a : get.getResponseHeaders()) {
        Log_OC.d("sharer",a.getName() + ":" + a.getValue());
      }
      status=wc.executeMethod(post);
      for (      org.apache.commons.httpclient.Header a : post.getRequestHeaders()) {
        Log_OC.d("sharer-h",a.getName() + ":" + a.getValue());
      }
      for (      org.apache.commons.httpclient.Header a : post.getResponseHeaders()) {
        Log_OC.d("sharer",a.getName() + ":" + a.getValue());
      }
      String resp=post.getResponseBodyAsString();
      Log_OC.d("share","" + post.getURI().toString());
      Log_OC.d("share","returned status " + status);
      Log_OC.d("share"," " + resp);
      if (status != HttpStatus.SC_OK || resp == null || resp.equals("") || resp.startsWith("false")) {
        return;
      }
      JSONObject jsonObject=new JSONObject(resp);
      String jsonStatus=jsonObject.getString("status");
      if (!jsonStatus.equals("success"))       throw new Exception("Error while sharing file status != success");
      String token=jsonObject.getString("data");
      String uri=am.getUserData(account,AccountAuthenticator.KEY_OC_BASE_URL) + SHARED_PATH + token;
      Log_OC.d("Actions:shareFile ok","url: " + uri);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
 else   if (ocv.compareTo(new OwnCloudVersion(0x030000)) >= 0) {
  }
}
