{
switch (item.getItemId()) {
case R.id.action_share_file:
{
      mContainerActivity.getFileOperationsHelper().showShareFile(getFile());
      return true;
    }
case R.id.action_open_file_with:
{
    mContainerActivity.getFileOperationsHelper().openFile(getFile());
    return true;
  }
case R.id.action_remove_file:
{
  RemoveFileDialogFragment dialog=RemoveFileDialogFragment.newInstance(getFile());
  dialog.show(getFragmentManager(),FTAG_CONFIRMATION);
  return true;
}
case R.id.action_rename_file:
{
RenameFileDialogFragment dialog=RenameFileDialogFragment.newInstance(getFile());
dialog.show(getFragmentManager(),FTAG_RENAME_FILE);
return true;
}
case R.id.action_cancel_sync:
{
((FileDisplayActivity)mContainerActivity).cancelTransference(getFile());
return true;
}
case R.id.action_download_file:
case R.id.action_sync_file:
{
mContainerActivity.getFileOperationsHelper().syncFile(getFile());
return true;
}
case R.id.action_send_file:
{
if (!getFile().isDown()) {
Log_OC.d(TAG,getFile().getRemotePath() + " : File must be downloaded");
((FileDisplayActivity)mContainerActivity).startDownloadForSending(getFile());
}
 else {
mContainerActivity.getFileOperationsHelper().sendDownloadedFile(getFile());
}
return true;
}
case R.id.action_favorite_file:
{
mContainerActivity.getFileOperationsHelper().toggleFavorite(getFile(),true);
return true;
}
case R.id.action_unfavorite_file:
{
mContainerActivity.getFileOperationsHelper().toggleFavorite(getFile(),false);
return true;
}
default :
return super.onOptionsItemSelected(item);
}
}
