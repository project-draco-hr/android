{
  if (!instantUploadEnabled(context)) {
    Log_OC.d(TAG,"Instant upload disabled, abording uploading");
    return;
  }
  Account account=AccountUtils.getCurrentOwnCloudAccount(context);
  if (account == null) {
    Log_OC.w(TAG,"No owncloud account found for instant upload, aborting");
    return;
  }
  Cursor c=context.getContentResolver().query(intent.getData(),CONTENT_PROJECTION,null,null,null);
  if (!c.moveToFirst()) {
    Log_OC.e(TAG,"Couldn't resolve given uri: " + intent.getDataString());
    return;
  }
  String file_path=c.getString(c.getColumnIndex(Media.DATA));
  String file_name=c.getString(c.getColumnIndex(Media.DISPLAY_NAME));
  String mime_type=c.getString(c.getColumnIndex(Media.MIME_TYPE));
  c.close();
  Log_OC.e(TAG,file_path + "");
  DbHandler db=new DbHandler(context);
  db.putFileForLater(file_path,account.name,null);
  db.close();
  if (!isOnline(context) || (instantUploadViaWiFiOnly(context) && !isConnectedViaWiFi(context))) {
    return;
  }
  IntentFilter filter=new IntentFilter(FileUploader.UPLOAD_FINISH_MESSAGE);
  context.getApplicationContext().registerReceiver(this,filter);
  Intent i=new Intent(context,FileUploader.class);
  i.putExtra(FileUploader.KEY_ACCOUNT,account);
  i.putExtra(FileUploader.KEY_LOCAL_FILE,file_path);
  i.putExtra(FileUploader.KEY_REMOTE_FILE,FileStorageUtils.getInstantUploadFilePath(context,file_name));
  i.putExtra(FileUploader.KEY_UPLOAD_TYPE,FileUploader.UPLOAD_SINGLE_FILE);
  i.putExtra(FileUploader.KEY_MIME_TYPE,mime_type);
  i.putExtra(FileUploader.KEY_INSTANT_UPLOAD,true);
  context.startService(i);
}
