{
  Bitmap thumbnail=null;
  try {
    mFile=params[0];
    final String imageKey=String.valueOf(mFile.getRemoteId());
    thumbnail=getBitmapFromDiskCache(imageKey);
    if (thumbnail == null || mFile.needsUpdateThumbnail()) {
      Resources r=MainApp.getAppContext().getResources();
      int px=(int)Math.round(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,150,r.getDisplayMetrics()));
      if (mFile.isDown()) {
        Bitmap bitmap=BitmapUtils.decodeSampledBitmapFromFile(mFile.getStoragePath(),px,px);
        if (bitmap != null) {
          thumbnail=ThumbnailUtils.extractThumbnail(bitmap,px,px);
          addBitmapToCache(imageKey,thumbnail);
          mFile.setNeedsUpdateThumbnail(false);
          mStorageManager.saveFile(mFile);
        }
      }
 else {
        try {
          int status=-1;
          String uri=mClient.getBaseUri() + "/index.php/apps/files/api/v1/thumbnail/" + px+ "/"+ px+ Uri.encode(mFile.getRemotePath(),"/");
          Log_OC.d("Thumbnail","URI: " + uri);
          GetMethod get=new GetMethod(uri);
          status=mClient.executeMethod(get);
          if (status == HttpStatus.SC_OK) {
            byte[] bytes=get.getResponseBody();
            Bitmap bitmap=BitmapFactory.decodeByteArray(bytes,0,bytes.length);
            thumbnail=ThumbnailUtils.extractThumbnail(bitmap,px,px);
            if (thumbnail != null) {
              addBitmapToCache(imageKey,thumbnail);
            }
          }
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
  }
 catch (  Throwable t) {
    Log_OC.e(TAG,"Generation of thumbnail for " + mFile + " failed",t);
    if (t instanceof OutOfMemoryError) {
      System.gc();
    }
  }
  return thumbnail;
}
