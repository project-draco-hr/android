{
  if (mClose == null) {
    LayoutInflater inflater=LayoutInflater.from(mContext);
    mClose=(NineLinearLayout)inflater.inflate(R.layout.abs__action_mode_close_item,this,false);
    addView(mClose);
  }
 else   if (mClose.getParent() == null) {
    addView(mClose);
  }
  View closeButton=mClose.findViewById(R.id.abs__action_mode_close_button);
  closeButton.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      mode.finish();
    }
  }
);
  final MenuBuilder menu=(MenuBuilder)mode.getMenu();
  if (mActionMenuPresenter != null) {
    mActionMenuPresenter.dismissPopupMenus();
  }
  mActionMenuPresenter=new ActionMenuPresenter(mContext);
  mActionMenuPresenter.setReserveOverflow(true);
  final LayoutParams layoutParams=new LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.MATCH_PARENT);
  if (!mSplitActionBar) {
    menu.addMenuPresenter(mActionMenuPresenter);
    mMenuView=(ActionMenuView)mActionMenuPresenter.getMenuView(this);
    mMenuView.setBackgroundDrawable(null);
    addView(mMenuView,layoutParams);
  }
 else {
    mActionMenuPresenter.setWidthLimit(getContext().getResources().getDisplayMetrics().widthPixels,true);
    mActionMenuPresenter.setItemLimit(Integer.MAX_VALUE);
    layoutParams.width=LayoutParams.MATCH_PARENT;
    layoutParams.height=mContentHeight;
    menu.addMenuPresenter(mActionMenuPresenter);
    mMenuView=(ActionMenuView)mActionMenuPresenter.getMenuView(this);
    mMenuView.setBackgroundDrawable(mSplitBackground);
    mSplitView.addView(mMenuView,layoutParams);
  }
  mAnimateInOnLayout=true;
}
