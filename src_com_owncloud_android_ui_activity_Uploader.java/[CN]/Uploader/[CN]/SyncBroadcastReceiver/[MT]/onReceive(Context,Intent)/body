{
  try {
    String event=intent.getAction();
    Log_OC.d(TAG,"Received broadcast " + event);
    String accountName=intent.getStringExtra(FileSyncAdapter.EXTRA_ACCOUNT_NAME);
    String synchFolderRemotePath=intent.getStringExtra(FileSyncAdapter.EXTRA_FOLDER_PATH);
    RemoteOperationResult synchResult=(RemoteOperationResult)intent.getSerializableExtra(FileSyncAdapter.EXTRA_RESULT);
    boolean sameAccount=(getAccount() != null && accountName.equals(getAccount().name) && getStorageManager() != null);
    if (sameAccount) {
      if (FileSyncAdapter.EVENT_FULL_SYNC_START.equals(event)) {
        mSyncInProgress=true;
      }
 else {
        OCFile currentFile=(mFile == null) ? null : getStorageManager().getFileByPath(mFile.getRemotePath());
        OCFile currentDir=(getCurrentFolder() == null) ? null : getStorageManager().getFileByPath(getCurrentFolder().getRemotePath());
        if (currentDir == null) {
          Toast.makeText(context,String.format(getString(R.string.sync_current_folder_was_removed),getCurrentFolder().getFileName()),Toast.LENGTH_LONG).show();
          browseToRoot();
        }
 else {
          if (currentFile == null && !mFile.isFolder()) {
            currentFile=currentDir;
          }
          if (synchFolderRemotePath != null && currentDir.getRemotePath().equals(synchFolderRemotePath)) {
            populateDirectoryList();
          }
          mFile=currentFile;
        }
        mSyncInProgress=(!FileSyncAdapter.EVENT_FULL_SYNC_END.equals(event) && !RefreshFolderOperation.EVENT_SINGLE_FOLDER_SHARES_SYNCED.equals(event));
        if (RefreshFolderOperation.EVENT_SINGLE_FOLDER_CONTENTS_SYNCED.equals(event) && synchResult != null && !synchResult.isSuccess()) {
          if (synchResult.getCode() == ResultCode.UNAUTHORIZED || (synchResult.isException() && synchResult.getException() instanceof AuthenticatorException)) {
            requestCredentialsUpdate(context);
          }
 else           if (RemoteOperationResult.ResultCode.SSL_RECOVERABLE_PEER_UNVERIFIED.equals(synchResult.getCode())) {
            showUntrustedCertDialog(synchResult);
          }
        }
      }
      removeStickyBroadcast(intent);
      Log_OC.d(TAG,"Setting progress visibility to " + mSyncInProgress);
    }
  }
 catch (  RuntimeException e) {
    removeStickyBroadcast(intent);
  }
}
