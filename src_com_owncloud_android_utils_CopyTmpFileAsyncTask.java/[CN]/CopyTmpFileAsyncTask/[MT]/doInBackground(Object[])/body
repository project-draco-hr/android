{
  String result=null;
  if (params != null && params.length == 5) {
    Uri uri=(Uri)params[0];
    String filePath=(String)params[1];
    mIndex=((Integer)params[2]).intValue();
    String accountName=(String)params[3];
    ContentResolver contentResolver=(ContentResolver)params[4];
    String fullTempPath=FileStorageUtils.getTemporalPath(accountName) + filePath;
    InputStream inputStream=null;
    FileOutputStream outputStream=null;
    try {
      inputStream=contentResolver.openInputStream(uri);
      File cacheFile=new File(fullTempPath);
      File tempDir=cacheFile.getParentFile();
      if (!tempDir.exists()) {
        tempDir.mkdirs();
      }
      cacheFile.createNewFile();
      outputStream=new FileOutputStream(fullTempPath);
      byte[] buffer=new byte[4096];
      int count=0;
      while ((count=inputStream.read(buffer)) > 0) {
        outputStream.write(buffer,0,count);
      }
      outputStream.close();
      inputStream.close();
      result=fullTempPath;
    }
 catch (    Exception e) {
      Log_OC.e(TAG,"Exception ",e);
      if (inputStream != null) {
        try {
          inputStream.close();
        }
 catch (        Exception e1) {
          Log_OC.e(TAG,"Input Stream Exception ",e1);
        }
      }
      if (outputStream != null) {
        try {
          outputStream.close();
        }
 catch (        Exception e1) {
          Log_OC.e(TAG,"Output Stream Exception ",e1);
        }
      }
      if (fullTempPath != null) {
        File f=new File(fullTempPath);
        f.delete();
      }
      result=null;
    }
  }
 else {
    throw new IllegalArgumentException("Error in parameters number");
  }
  return result;
}
