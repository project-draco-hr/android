{
  String pathToCopiedFile=null;
  if (params != null && params.length == 4) {
    Account account=(Account)params[0];
    Uri uri=(Uri)params[1];
    String remotePath=(String)params[2];
    mIndex=((Integer)params[3]);
    InputStream inputStream=null;
    FileOutputStream outputStream=null;
    String fullTempPath=null;
    ContentResolver contentResolver=mAppContext.getContentResolver();
    try {
      fullTempPath=FileStorageUtils.getTemporalPath(account.name) + remotePath;
      inputStream=contentResolver.openInputStream(uri);
      File cacheFile=new File(fullTempPath);
      File tempDir=cacheFile.getParentFile();
      if (!tempDir.exists()) {
        tempDir.mkdirs();
      }
      cacheFile.createNewFile();
      outputStream=new FileOutputStream(fullTempPath);
      byte[] buffer=new byte[4096];
      int count=0;
      while ((count=inputStream.read(buffer)) > 0) {
        outputStream.write(buffer,0,count);
      }
      outputStream.close();
      inputStream.close();
      pathToCopiedFile=fullTempPath;
    }
 catch (    Exception e) {
      Log_OC.e(TAG,"Exception while copying " + uri.toString() + " to temporary file",e);
      if (fullTempPath != null) {
        File f=new File(fullTempPath);
        if (f.exists()) {
          if (!f.delete()) {
            Log_OC.e(TAG,"Could not delete temporary file " + fullTempPath);
          }
        }
      }
    }
 finally {
      if (inputStream != null) {
        try {
          inputStream.close();
        }
 catch (        Exception e) {
          Log_OC.w(TAG,"Ignoring exception of inputStream closure");
        }
      }
      if (outputStream != null) {
        try {
          outputStream.close();
        }
 catch (        Exception e) {
          Log_OC.w(TAG,"Ignoring exception of outStream closure");
        }
      }
    }
    if (pathToCopiedFile != null) {
      requestUpload(account,pathToCopiedFile,remotePath,contentResolver.getType(uri));
    }
 else {
      String message=String.format(mAppContext.getString(R.string.uploader_error_forbidden_content),mAppContext.getString(R.string.app_name));
      Toast.makeText(mAppContext,message,Toast.LENGTH_LONG).show();
      Log_OC.d(TAG,message);
    }
  }
 else {
    throw new IllegalArgumentException("Error in parameters number");
  }
  return pathToCopiedFile;
}
