{
  boolean skipFirst=sf, override_parent=!sf;
  for (  TreeNode n : WebdavUtils.parseResponseToNodes(resp.getEntity().getContent())) {
    if (skipFirst) {
      skipFirst=false;
      continue;
    }
    String path=n.stripPathFromFilename(uri.getPath());
    long mod=n.getProperty(NodeProperty.LAST_MODIFIED_DATE) == null ? 0 : Long.parseLong(n.getProperty(NodeProperty.LAST_MODIFIED_DATE));
    OCFile file=new OCFile(getContentProvider(),getAccount(),n.getProperty(NodeProperty.PATH));
    if (file.fileExtist() && file.getModificationTimestamp() >= mod) {
      Log.d(TAG,"No update for file/dir " + file.getFileName() + " is needed");
    }
 else {
      Log.d(TAG,"File " + n.getProperty(NodeProperty.PATH) + " will be "+ (file.fileExtist() ? "updated" : "created"));
      long len=n.getProperty(NodeProperty.CONTENT_LENGTH) == null ? 0 : Long.parseLong(n.getProperty(NodeProperty.CONTENT_LENGTH));
      long create=n.getProperty(NodeProperty.CREATE_DATE) == null ? 0 : Long.parseLong(n.getProperty(NodeProperty.CREATE_DATE));
      file=OCFile.createNewFile(getContentProvider(),getAccount(),n.getProperty(NodeProperty.PATH),len,create,mod,n.getProperty(NodeProperty.RESOURCE_TYPE),parent_id);
      file.save();
      if (override_parent) {
        parent_id=file.getFileId();
        override_parent=false;
      }
    }
    if (!TextUtils.isEmpty(n.getProperty(NodeProperty.NAME)) && n.getProperty(NodeProperty.RESOURCE_TYPE).equals("DIR")) {
      HttpPropFind method=new HttpPropFind(uri.getPath() + path + n.getProperty(NodeProperty.NAME).replace(" ","%20")+ "/");
      HttpResponse response=fireRawRequest(method);
      parseResponse(response,uri,client,targetHost,n.getChildList(),true,file.getFileId());
    }
  }
}
