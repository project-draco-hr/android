{
  WaitAMomentPopUp waitAMomentPopUp;
  FileListView fileListView=Actions.login(Config.URL,Config.user,Config.password,Config.isTrusted,driver);
  common.assertIsInFileListView();
  Actions.deleteElement(FOLDER_WHERE_MOVE,fileListView,driver);
  Actions.deleteElement(FOLDER_TO_MOVE,fileListView,driver);
  waitAMomentPopUp=Actions.createFolder(FOLDER_WHERE_MOVE,fileListView);
  Common.waitTillElementIsNotPresent(waitAMomentPopUp.getWaitAMomentTextElement(),100);
  fileListView.scrollTillFindElement(FOLDER_WHERE_MOVE);
  assertTrue(fileListView.getFileElement().isDisplayed());
  waitAMomentPopUp=Actions.createFolder(FOLDER_TO_MOVE,fileListView);
  Common.waitTillElementIsNotPresent(waitAMomentPopUp.getWaitAMomentTextElement(),100);
  fileListView.scrollTillFindElement(FOLDER_TO_MOVE);
  assertTrue(fileListView.getFileElement().isDisplayed());
  ElementMenuOptions menuOptions=fileListView.longPressOnElement(FOLDER_TO_MOVE);
  MoveView moveView=menuOptions.clickOnMove();
  moveView.scrollTillFindElement(FOLDER_WHERE_MOVE).tap(1,1);
  waitAMomentPopUp=moveView.clickOnChoose();
  Common.waitTillElementIsNotPresent(waitAMomentPopUp.getWaitAMomentTextElement(),100);
  fileListView.scrollTillFindElement(FOLDER_WHERE_MOVE).tap(1,1);
  Common.waitTillElementIsNotPresent(fileListView.getProgressCircular(),1000);
  Thread.sleep(1000);
  fileListView.scrollTillFindElement(FOLDER_TO_MOVE);
  assertEquals(FOLDER_TO_MOVE,fileListView.getFileElement().getText());
}
