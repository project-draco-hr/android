{
  mDirectory=directory;
  mFiles=mDirectory.listFiles();
  if (mFiles != null) {
    Arrays.sort(mFiles,new Comparator<File>(){
      @Override public int compare(      File lhs,      File rhs){
        if (lhs.isDirectory() && !rhs.isDirectory()) {
          return -1;
        }
 else         if (!lhs.isDirectory() && rhs.isDirectory()) {
          return 1;
        }
        return compareNames(lhs,rhs);
      }
      private int compareNames(      File lhs,      File rhs){
        return lhs.getName().toLowerCase().compareTo(rhs.getName().toLowerCase());
      }
    }
);
  }
  Iterator<DataSetObserver> it=mObservers.iterator();
  while (it.hasNext()) {
    it.next().onChanged();
  }
}
