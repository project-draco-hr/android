{
  if (directory == null) {
    Log_OC.e(TAG,"Null received as directory to swap; ignoring");
    return;
  }
  mFolder=directory;
  mFiles=mFolder.listFiles(new FileFilter(){
    @Override public boolean accept(    File file){
      return (file.exists() && (!mJustFolders || file.isDirectory()));
    }
  }
);
  if (mFiles != null) {
    Arrays.sort(mFiles,new Comparator<File>(){
      @Override public int compare(      File lhs,      File rhs){
        if (lhs.isDirectory() && !rhs.isDirectory()) {
          return -1;
        }
 else         if (!lhs.isDirectory() && rhs.isDirectory()) {
          return 1;
        }
        return compareNames(lhs,rhs);
      }
      private int compareNames(      File lhs,      File rhs){
        return lhs.getName().toLowerCase().compareTo(rhs.getName().toLowerCase());
      }
    }
);
  }
  notifyDataSetChanged();
}
