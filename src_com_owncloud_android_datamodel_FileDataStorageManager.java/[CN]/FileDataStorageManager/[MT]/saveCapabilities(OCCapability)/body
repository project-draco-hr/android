{
  ContentValues cv=new ContentValues();
  cv.put(ProviderTableMeta.CAPABILITIES_ACCOUNT_NAME,mAccount.name);
  cv.put(ProviderTableMeta.CAPABILITIES_VERSION_MAYOR,capability.getVersionMayor());
  cv.put(ProviderTableMeta.CAPABILITIES_VERSION_MINOR,capability.getVersionMinor());
  cv.put(ProviderTableMeta.CAPABILITIES_VERSION_MICRO,capability.getVersionMicro());
  cv.put(ProviderTableMeta.CAPABILITIES_VERSION_STRING,capability.getVersionString());
  cv.put(ProviderTableMeta.CAPABILITIES_VERSION_EDITION,capability.getVersionEdition());
  cv.put(ProviderTableMeta.CAPABILITIES_CORE_POLLINTERVAL,capability.getCorePollinterval());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_API_ENABLED,capability.getFilesSharingApiEnabled().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_ENABLED,capability.getFilesSharingPublicEnabled().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_PASSWORD_ENFORCED,capability.getFilesSharingPublicPasswordEnforced().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_EXPIRE_DATE_ENABLED,capability.getFilesSharingPublicExpireDateEnabled().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_EXPIRE_DATE_DAYS,capability.getFilesSharingPublicExpireDateDays());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_EXPIRE_DATE_ENFORCED,capability.getFilesSharingPublicExpireDateEnforced().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_SEND_MAIL,capability.getFilesSharingPublicSendMail().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_PUBLIC_UPLOAD,capability.getFilesSharingPublicUpload().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_USER_SEND_MAIL,capability.getFilesSharingUserSendMail().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_RESHARING,capability.getFilesSharingResharing().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_FEDERATION_OUTGOING,capability.getFilesSharingFederationOutgoing().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_SHARING_FEDERATION_INCOMING,capability.getFilesSharingFederationIncoming().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_FILES_BIGFILECHUNKING,capability.getFilesBigFileChuncking().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_FILES_UNDELETE,capability.getFilesUndelete().getValue());
  cv.put(ProviderTableMeta.CAPABILITIES_FILES_VERSIONING,capability.getFilesVersioning().getValue());
  if (capabilityExists(mAccount.name)) {
    if (getContentResolver() != null) {
      getContentResolver().update(ProviderTableMeta.CONTENT_URI_CAPABILITIES,cv,ProviderTableMeta.CAPABILITIES_ACCOUNT_NAME + "=?",new String[]{mAccount.name});
    }
 else {
      try {
        getContentProviderClient().update(ProviderTableMeta.CONTENT_URI_CAPABILITIES,cv,ProviderTableMeta.CAPABILITIES_ACCOUNT_NAME + "=?",new String[]{mAccount.name});
      }
 catch (      RemoteException e) {
        Log_OC.e(TAG,"Fail to insert insert file to database " + e.getMessage());
      }
    }
  }
 else {
    Uri result_uri=null;
    if (getContentResolver() != null) {
      result_uri=getContentResolver().insert(ProviderTableMeta.CONTENT_URI_CAPABILITIES,cv);
    }
 else {
      try {
        result_uri=getContentProviderClient().insert(ProviderTableMeta.CONTENT_URI_CAPABILITIES,cv);
      }
 catch (      RemoteException e) {
        Log_OC.e(TAG,"Fail to insert insert capability to database " + e.getMessage());
      }
    }
    if (result_uri != null) {
      long new_id=Long.parseLong(result_uri.getPathSegments().get(1));
      capability.setId(new_id);
      capability.setAccountName(mAccount.name);
    }
  }
  return capability;
}
