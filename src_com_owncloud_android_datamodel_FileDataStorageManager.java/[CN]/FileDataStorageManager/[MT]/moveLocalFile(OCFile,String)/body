{
  if (file != null && file.fileExists()) {
    if (!OCFile.ROOT_PATH.equals(file.getFileName())) {
      Cursor c=null;
      if (getContentProviderClient() != null) {
        try {
          c=getContentProviderClient().query(ProviderTableMeta.CONTENT_URI,null,ProviderTableMeta.FILE_ACCOUNT_OWNER + "=? AND " + ProviderTableMeta.FILE_PATH+ " LIKE ? ",new String[]{mAccount.name,file.getRemotePath() + "%"},ProviderTableMeta.FILE_PATH + " ASC ");
        }
 catch (        RemoteException e) {
          Log_OC.e(TAG,e.getMessage());
        }
      }
 else {
        c=getContentResolver().query(ProviderTableMeta.CONTENT_URI,null,ProviderTableMeta.FILE_ACCOUNT_OWNER + "=? AND " + ProviderTableMeta.FILE_PATH+ " LIKE ? ",new String[]{mAccount.name,file.getRemotePath() + "%"},ProviderTableMeta.FILE_PATH + " ASC ");
      }
      ArrayList<ContentProviderOperation> operations=new ArrayList<ContentProviderOperation>(c.getCount());
      if (c.moveToFirst()) {
        int lengthOfOldPath=file.getRemotePath().length();
        String defaultSavePath=FileStorageUtils.getSavePath(mAccount.name);
        int lengthOfOldStoragePath=defaultSavePath.length() + lengthOfOldPath;
        do {
          ContentValues cv=new ContentValues();
          OCFile child=createFileInstance(c);
          cv.put(ProviderTableMeta.FILE_PATH,targetPath + child.getRemotePath().substring(lengthOfOldPath));
          if (child.getStoragePath() != null && child.getStoragePath().startsWith(defaultSavePath)) {
            cv.put(ProviderTableMeta.FILE_STORAGE_PATH,defaultSavePath + targetPath + child.getStoragePath().substring(lengthOfOldStoragePath));
          }
          operations.add(ContentProviderOperation.newUpdate(ProviderTableMeta.CONTENT_URI).withValues(cv).withSelection(ProviderTableMeta._ID + "=?",new String[]{String.valueOf(child.getFileId())}).build());
        }
 while (c.moveToNext());
      }
      c.close();
      try {
        if (getContentResolver() != null) {
          getContentResolver().applyBatch(MainApp.getAuthority(),operations);
        }
 else {
          getContentProviderClient().applyBatch(operations);
        }
      }
 catch (      Exception e) {
        Log_OC.e(TAG,"Fail to update " + file.getFileId() + " and descendants in database",e);
      }
    }
  }
}
