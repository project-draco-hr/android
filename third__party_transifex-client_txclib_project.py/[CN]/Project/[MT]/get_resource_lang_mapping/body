def get_resource_lang_mapping(self, resource):
    '\n        Get language mappings for a specific resource.\n        '
    lang_map = Flipdict()
    try:
        args = self.config.get('main', 'lang_map')
        for arg in args.replace(' ', '').split(','):
            (k, v) = arg.split(':')
            lang_map.update({k: v, })
    except ConfigParser.NoOptionError:
        pass
    except (ValueError, KeyError):
        raise Exception('Your lang map configuration is not correct.')
    if self.config.has_section(resource):
        res_lang_map = Flipdict()
        try:
            args = self.config.get(resource, 'lang_map')
            for arg in args.replace(' ', '').split(','):
                (k, v) = arg.split(':')
                res_lang_map.update({k: v, })
        except ConfigParser.NoOptionError:
            pass
        except (ValueError, KeyError):
            raise Exception('Your lang map configuration is not correct.')
    lang_map.update(res_lang_map)
    return lang_map
