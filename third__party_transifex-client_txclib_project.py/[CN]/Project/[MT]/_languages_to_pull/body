def _languages_to_pull(self, languages, files, lang_map, stats, force):
    'Get a set of langauges to pull.\n\n        Args:\n            languages: A list of languages the user selected in cmd.\n            files: A dictionary of current local translation files.\n        Returns:\n            A tuple of a set of existing languages and new translations.\n        '
    if (not languages):
        pull_languages = set([])
        pull_languages |= set(files.keys())
        mapped_files = []
        for lang in pull_languages:
            if (lang in lang_map.flip):
                mapped_files.append(lang_map.flip[lang])
        pull_languages -= set(lang_map.flip.keys())
        pull_languages |= set(mapped_files)
        return (pull_languages, set([]))
    else:
        pull_languages = []
        new_translations = []
        f_langs = files.keys()
        for l in languages:
            if ((l not in f_langs) and (not ((l in lang_map) and (lang_map[l] in f_langs)))):
                if self._should_add_translation(l, stats, force):
                    new_translations.append(l)
            else:
                if (l in lang_map.keys()):
                    l = lang_map[l]
                pull_languages.append(l)
        return (set(pull_languages), set(new_translations))
