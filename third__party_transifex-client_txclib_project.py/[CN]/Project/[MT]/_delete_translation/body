def _delete_translation(self, project_details, resource, stats, language):
    'Delete a specific translation from the specified resource.'
    (project_slug, resource_slug) = resource.split('.')
    if (language not in stats):
        if (not self.skip):
            msg = 'Skipping %s: Translation does not exist.'
            logger.warning((msg % language))
        return
    if (not self.force):
        teams = project_details['teams']
        if (language in teams):
            msg = 'Skipping %s: Unable to delete translation because it is associated with a team.\nPlease use -f or --force option to delete this translation.'
            logger.warning((msg % language))
            return
        if (int(stats[language]['translated_entities']) > 0):
            msg = 'Skipping %s: Unable to delete translation because it is not empty.\nPlease use -f or --force option to delete this translation.'
            logger.warning((msg % language))
            return
    try:
        self.do_url_request('delete_translation', language=language, method='DELETE')
        msg = 'Deleted language %s from resource %s of project %s.'
        logger.info((msg % (language, resource_slug, project_slug)))
    except Exception as e:
        msg = 'Unable to delete translation %s'
        logger.error((msg % language))
        if (not self.skip):
            raise
