def get_chosen_resources(self, resources):
    'Get the resources the user selected.\n\n        Support wildcards in the resources specified by the user.\n\n        Args:\n            resources: A list of resources as specified in command-line or\n                an empty list.\n        Returns:\n            A list of resources.\n        '
    configured_resources = self.get_resource_list()
    if (not resources):
        return configured_resources
    selected_resources = []
    for resource in resources:
        found = False
        for full_name in configured_resources:
            if fnmatch.fnmatch(full_name, resource):
                selected_resources.append(full_name)
                found = True
        if (not found):
            msg = "Specified resource '%s' does not exist."
            raise Exception((msg % resource))
    logger.debug(('Operating on resources: %s' % selected_resources))
    return selected_resources
