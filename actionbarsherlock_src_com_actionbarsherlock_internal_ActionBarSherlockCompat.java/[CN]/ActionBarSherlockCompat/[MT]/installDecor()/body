{
  if (DEBUG)   Log.d(TAG,"[installDecor]");
  if (mDecor == null) {
    mDecor=(ViewGroup)mActivity.getWindow().getDecorView().findViewById(android.R.id.content);
  }
  if (mContentParent == null) {
    List<View> views=null;
    if (mDecor.getChildCount() > 0) {
      views=new ArrayList<View>(1);
      for (int i=0, children=mDecor.getChildCount(); i < children; i++) {
        View child=mDecor.getChildAt(0);
        mDecor.removeView(child);
        views.add(child);
      }
    }
    mContentParent=generateLayout();
    if (views != null) {
      for (      View child : views) {
        mContentParent.addView(child);
      }
    }
    mTitleView=(TextView)mDecor.findViewById(android.R.id.title);
    if (mTitleView != null) {
      if (hasFeature(Window.FEATURE_NO_TITLE)) {
        mTitleView.setVisibility(View.GONE);
        if (mContentParent instanceof FrameLayout) {
          ((FrameLayout)mContentParent).setForeground(null);
        }
      }
 else {
        mTitleView.setText(mTitle);
      }
    }
 else {
      wActionBar=(ActionBarView)mDecor.findViewById(R.id.abs__action_bar);
      if (wActionBar != null) {
        wActionBar.setWindowCallback(this);
        if (wActionBar.getTitle() == null) {
          wActionBar.setWindowTitle(mActivity.getTitle());
        }
        if (hasFeature(Window.FEATURE_PROGRESS)) {
          wActionBar.initProgress();
        }
        if (hasFeature(Window.FEATURE_INDETERMINATE_PROGRESS)) {
          wActionBar.initIndeterminateProgress();
        }
        int uiOptions=loadUiOptionsFromManifest(mActivity);
        if (uiOptions != 0) {
          mUiOptions=uiOptions;
        }
        boolean splitActionBar=false;
        final boolean splitWhenNarrow=(mUiOptions & ActivityInfo.UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW) != 0;
        if (splitWhenNarrow) {
          splitActionBar=getResources_getBoolean(mActivity,R.bool.abs__split_action_bar_is_narrow);
        }
 else {
          splitActionBar=mActivity.getTheme().obtainStyledAttributes(R.styleable.SherlockTheme).getBoolean(R.styleable.SherlockTheme_windowSplitActionBar,false);
        }
        final ActionBarContainer splitView=(ActionBarContainer)mDecor.findViewById(R.id.abs__split_action_bar);
        if (splitView != null) {
          wActionBar.setSplitView(splitView);
          wActionBar.setSplitActionBar(splitActionBar);
          wActionBar.setSplitWhenNarrow(splitWhenNarrow);
          mActionModeView=(ActionBarContextView)mDecor.findViewById(R.id.abs__action_context_bar);
          mActionModeView.setSplitView(splitView);
          mActionModeView.setSplitActionBar(splitActionBar);
          mActionModeView.setSplitWhenNarrow(splitWhenNarrow);
        }
 else         if (splitActionBar) {
          Log.e(TAG,"Requested split action bar with incompatible window decor! Ignoring request.");
        }
        mDecor.post(new Runnable(){
          @Override public void run(){
            if (!mIsDestroyed && !mActivity.isFinishing() && mMenu == null) {
              dispatchInvalidateOptionsMenu();
            }
          }
        }
);
      }
    }
  }
}
