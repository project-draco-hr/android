{
  final boolean qwerty=isQwertyMode();
  final int metaState=event.getMetaState();
  final KeyCharacterMap.KeyData possibleChars=new KeyCharacterMap.KeyData();
  final boolean isKeyCodeMapped=event.getKeyData(possibleChars);
  if (!isKeyCodeMapped && (keyCode != KeyEvent.KEYCODE_DEL)) {
    return;
  }
  final int N=mItems.size();
  for (int i=0; i < N; i++) {
    MenuItemImpl item=mItems.get(i);
    if (item.hasSubMenu()) {
      ((MenuBuilder)item.getSubMenu()).findItemsWithShortcutForKey(items,keyCode,event);
    }
    final char shortcutChar=qwerty ? item.getAlphabeticShortcut() : item.getNumericShortcut();
    if (((metaState & (KeyEvent.META_SHIFT_ON | KeyEvent.META_SYM_ON)) == 0) && (shortcutChar != 0) && (shortcutChar == possibleChars.meta[0] || shortcutChar == possibleChars.meta[2] || (qwerty && shortcutChar == '\b' && keyCode == KeyEvent.KEYCODE_DEL))&& item.isEnabled()) {
      items.add(item);
    }
  }
}
