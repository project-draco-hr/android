{
  String targetKey=buildKey(accountName,remotePath);
  if (keySufix != null) {
    targetKey=targetKey + keySufix;
  }
  Node<V> valuedNode=new Node(targetKey,value);
  Node<V> previousValue=mMap.putIfAbsent(targetKey,valuedNode);
  if (previousValue != null) {
    return null;
  }
 else {
    String currentPath=remotePath, parentPath=null, parentKey=null;
    Node<V> currentNode=valuedNode, parentNode=null;
    boolean linked=false;
    while (!OCFile.ROOT_PATH.equals(currentPath) && !linked) {
      parentPath=new File(currentPath).getParent();
      if (!parentPath.endsWith(OCFile.PATH_SEPARATOR)) {
        parentPath+=OCFile.PATH_SEPARATOR;
      }
      parentKey=buildKey(accountName,parentPath);
      parentNode=mMap.get(parentKey);
      if (parentNode == null) {
        parentNode=new Node(parentKey,null);
        parentNode.addChild(currentNode);
        mMap.put(parentKey,parentNode);
      }
 else {
        parentNode.addChild(currentNode);
        linked=true;
      }
      currentPath=parentPath;
      currentNode=parentNode;
    }
    String linkedTo=OCFile.ROOT_PATH;
    if (linked) {
      linkedTo=parentNode.getKey().substring(accountName.length());
    }
    return new Pair<String,String>(targetKey,linkedTo);
  }
}
