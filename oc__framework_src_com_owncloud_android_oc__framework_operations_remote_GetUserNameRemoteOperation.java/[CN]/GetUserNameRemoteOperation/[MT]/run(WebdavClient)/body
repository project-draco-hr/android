{
  RemoteOperationResult result=null;
  int status=-1;
  GetMethod get=new GetMethod(mUrl + TAG_OCS_ROUTE);
  Log.d(TAG,"URL ------> " + mUrl + TAG_OCS_ROUTE);
  get.addRequestHeader(TAG_HEADER_CONTENT,TAG_HEADER_CONTENT_VALUE);
  get.addRequestHeader(TAG_HEADER_OCS_API,TAG_HEADER_OCS_API_VALUE);
  get.setRequestHeader(TAG_HEADER_COOKIE,mSessionCookie);
  try {
    status=client.executeMethod(get);
    if (isSuccess(status)) {
      Log.d(TAG,"Obtain RESPONSE");
      String response=get.getResponseBodyAsString();
      Log.d(TAG,"GET RESPONSE.................... " + response);
      JSONObject respJSON=new JSONObject(response);
      JSONObject respOCS=respJSON.getJSONObject(TAG_OCS);
      JSONObject respData=respOCS.getJSONObject(TAG_DATA);
      String id=respData.getString(TAG_ID);
      String displayName=respData.getString(TAG_DISPLAY_NAME);
      String email=respData.getString(TAG_EMAIL);
      result=new RemoteOperationResult(isSuccess(status),status,(get != null ? get.getResponseHeaders() : null));
      result.setUserName(displayName);
      Log.d(TAG,"Response: " + id + " - "+ displayName+ " - "+ email);
    }
  }
 catch (  HttpException e) {
    result=new RemoteOperationResult(e);
    e.printStackTrace();
  }
catch (  IOException e) {
    result=new RemoteOperationResult(e);
    e.printStackTrace();
  }
catch (  JSONException e) {
    result=new RemoteOperationResult(e);
    e.printStackTrace();
  }
 finally {
    get.releaseConnection();
  }
  return result;
}
