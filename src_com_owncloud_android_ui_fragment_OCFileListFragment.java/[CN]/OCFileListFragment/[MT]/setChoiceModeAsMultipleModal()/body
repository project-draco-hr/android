{
  setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);
  setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener(){
    @Override public void onItemCheckedStateChanged(    ActionMode mode,    int position,    long id,    boolean checked){
      mAdapter.updateSelection(position,checked);
      mode.invalidate();
    }
    @Override public boolean onCreateActionMode(    ActionMode mode,    Menu menu){
      mActiveActionMode=mode;
      MenuInflater inflater=getActivity().getMenuInflater();
      inflater.inflate(R.menu.file_actions_menu,menu);
      mode.invalidate();
      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
        Window w=getActivity().getWindow();
        mStatusBarColor=w.getStatusBarColor();
        w.setStatusBarColor(mStatusBarColorActionMode);
      }
      setFabEnabled(false);
      return true;
    }
    @Override public boolean onPrepareActionMode(    ActionMode mode,    Menu menu){
      final int checkedCount=getListView().getCheckedItemCount();
      String title=getResources().getQuantityString(R.plurals.items_selected_count,checkedCount,checkedCount);
      mode.setTitle(title);
      if (checkedCount > 0) {
        List<OCFile> targetFiles=mAdapter.getCheckedItems();
        FileMenuFilter mf=new FileMenuFilter(targetFiles,((FileActivity)getActivity()).getAccount(),mContainerActivity,getActivity());
        mf.filter(menu);
      }
      return true;
    }
    @Override public boolean onActionItemClicked(    ActionMode mode,    MenuItem item){
      return onFileActionChosen(item.getItemId());
    }
    @Override public void onDestroyActionMode(    ActionMode mode){
      mActiveActionMode=null;
      mAdapter.clearSelection();
      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
        getActivity().getWindow().setStatusBarColor(mStatusBarColor);
      }
      if (!mHideFab) {
        setFabEnabled(true);
      }
    }
  }
);
}
