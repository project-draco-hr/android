{
  AdapterContextMenuInfo info=(AdapterContextMenuInfo)item.getMenuInfo();
  mTargetFile=(OCFile)mAdapter.getItem(info.position);
switch (item.getItemId()) {
case R.id.action_share_file:
{
      mContainerActivity.getFileOperationsHelper().shareFileWithLink(mTargetFile);
      return true;
    }
case R.id.action_unshare_file:
{
    mContainerActivity.getFileOperationsHelper().unshareFileWithLink(mTargetFile);
    return true;
  }
case R.id.action_rename_file:
{
  String fileName=mTargetFile.getFileName();
  int extensionStart=mTargetFile.isFolder() ? -1 : fileName.lastIndexOf(".");
  int selectionEnd=(extensionStart >= 0) ? extensionStart : fileName.length();
  EditNameDialog dialog=EditNameDialog.newInstance(getString(R.string.rename_dialog_title),fileName,0,selectionEnd,this);
  dialog.show(getFragmentManager(),FileDetailFragment.FTAG_RENAME_FILE);
  return true;
}
case R.id.action_remove_file:
{
RemoveFileDialogFragment dialog=RemoveFileDialogFragment.newInstance(mTargetFile);
dialog.show(getFragmentManager(),ConfirmationDialogFragment.FTAG_CONFIRMATION);
return true;
}
case R.id.action_download_file:
case R.id.action_sync_file:
{
mContainerActivity.getFileOperationsHelper().syncFile(mTargetFile);
return true;
}
case R.id.action_cancel_download:
case R.id.action_cancel_upload:
{
((FileDisplayActivity)mContainerActivity).cancelTransference(mTargetFile);
return true;
}
case R.id.action_see_details:
{
mContainerActivity.showDetails(mTargetFile);
return true;
}
case R.id.action_send_file:
{
if (!mTargetFile.isDown()) {
Log_OC.d(TAG,mTargetFile.getRemotePath() + " : File must be downloaded");
((FileDisplayActivity)mContainerActivity).startDownloadForSending(mTargetFile);
}
 else {
mContainerActivity.getFileOperationsHelper().sendDownloadedFile(mTargetFile);
}
return true;
}
default :
return super.onContextItemSelected(item);
}
}
