{
  AbsListView listView=getListView();
  setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);
  setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener(){
    private Menu menu;
    @Override public void onItemCheckedStateChanged(    ActionMode mode,    int position,    long id,    boolean checked){
      if (checked) {
        mAdapter.setNewSelection(position,checked);
      }
 else {
        mAdapter.removeSelection(position);
      }
      updateActionsMenu(mode);
    }
    @Override public boolean onCreateActionMode(    ActionMode mode,    Menu menu){
      createContextActionBar(menu);
      this.menu=menu;
      updateActionsMenu(mode);
      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
        getActivity().getWindow().setStatusBarColor(mStatusBarColorActionMode);
      }
      setFabEnabled(false);
      return true;
    }
    private void updateActionsMenu(    ActionMode mode){
      final int checkedCount=getListView().getCheckedItemCount();
      mode.setTitle(checkedCount + " selected");
      if (checkedCount > 0) {
        List<OCFile> targetFiles=mAdapter.getCheckedItems();
        if (mContainerActivity.getStorageManager() != null) {
          FileMenuFilter mf=new FileMenuFilter(targetFiles,mContainerActivity.getStorageManager().getAccount(),mContainerActivity,getActivity());
          mf.filter(menu);
        }
      }
    }
    @Override public boolean onPrepareActionMode(    ActionMode mode,    Menu menu){
      return false;
    }
    @Override public boolean onActionItemClicked(    ActionMode mode,    MenuItem item){
      return onFileActionChosen(item.getItemId());
    }
    @Override public void onDestroyActionMode(    ActionMode mode){
      mAdapter.removeSelection();
      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
        getActivity().getWindow().setStatusBarColor(mStatusBarColor);
      }
      if (!hideFab) {
        setFabEnabled(true);
      }
    }
  }
);
}
