{
  int readCount=0;
  Iterator<OnDatatransferProgressListener> it=null;
  try {
    mChannel.position(mOffset);
    long size=mFile.length();
    if (size == 0)     size=-1;
    long maxCount=Math.min(mOffset + mChunkSize,mChannel.size());
    while (mChannel.position() < maxCount) {
      readCount=mChannel.read(mBuffer);
      out.write(mBuffer.array(),0,readCount);
      mBuffer.clear();
      if (mTransferred < maxCount) {
        mTransferred+=readCount;
      }
synchronized (mDataTransferListeners) {
        it=mDataTransferListeners.iterator();
        while (it.hasNext()) {
          it.next().onTransferProgress(readCount,mTransferred,size,mFile.getName());
        }
      }
    }
  }
 catch (  IOException io) {
    Log_OC.e(TAG,io.getMessage());
    throw new RuntimeException("Ugly solution to workaround the default policy of retries when the server falls while uploading ; temporal fix; really",io);
  }
}
