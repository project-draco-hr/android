{
  Log_OC.d(TAG,"mPendingUploads size:" + mPendingUploads.size() + " - before uploading.");
switch (canUploadFileNow(OCUpload)) {
case NOW:
    Log_OC.d(TAG,"Calling uploadFile for " + OCUpload.getRemotePath());
  RemoteOperationResult uploadResult=uploadFile(OCUpload);
updateDatabaseUploadResult(uploadResult,mCurrentUpload);
notifyUploadResult(uploadResult,mCurrentUpload);
sendFinalBroadcast(uploadResult,mCurrentUpload);
Log_OC.d(TAG,"mCurrentUpload = null");
mCurrentUpload=null;
break;
case LATER:
break;
case FILE_GONE:
mUploadsStorageManager.updateUploadStatus(OCUpload.getLocalPath(),UploadStatus.UPLOAD_FAILED_GIVE_UP,com.owncloud.android.db.UploadResult.FILE_ERROR);
if (mPendingUploads.remove(OCUpload.getRemotePath()) == null) {
Log_OC.w(TAG,"Could remove " + OCUpload.getRemotePath() + " from mPendingUploads because it does not exist.");
}
break;
case ERROR:
Log_OC.e(TAG,"canUploadFileNow() returned ERROR. Fix that!");
break;
}
Log_OC.d(TAG,"mPendingUploads size:" + mPendingUploads.size() + " - after uploading.");
}
