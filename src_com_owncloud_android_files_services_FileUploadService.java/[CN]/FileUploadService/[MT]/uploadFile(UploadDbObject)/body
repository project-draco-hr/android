{
synchronized (mActiveUploads) {
    mCurrentUpload=mActiveUploads.get(uploadDbObject.getRemotePath());
    if (mCurrentUpload == null) {
      AccountManager aMgr=AccountManager.get(this);
      Account account=uploadDbObject.getAccount(getApplicationContext());
      String version=aMgr.getUserData(account,Constants.KEY_OC_VERSION);
      OwnCloudVersion ocv=new OwnCloudVersion(version);
      boolean chunked=FileUploadService.chunkedUploadIsSupported(ocv);
      String uploadKey=null;
      uploadKey=buildRemoteName(account,uploadDbObject.getRemotePath());
      OCFile file=obtainNewOCFileToUpload(uploadDbObject.getRemotePath(),uploadDbObject.getLocalPath(),uploadDbObject.getMimeType());
      mCurrentUpload=new UploadFileOperation(account,file,chunked,uploadDbObject.isForceOverwrite(),uploadDbObject.getLocalAction(),getApplicationContext());
      if (uploadDbObject.isCreateRemoteFolder()) {
        mCurrentUpload.setRemoteFolderToBeCreated();
      }
      mActiveUploads.putIfAbsent(uploadKey,mCurrentUpload);
      mCurrentUpload.addDatatransferProgressListener((FileUploaderBinder)mBinder);
    }
  }
  if (mCurrentUpload != null) {
    notifyUploadStart(mCurrentUpload);
    RemoteOperationResult uploadResult=null, grantResult=null;
    UploadFileOperation justFinishedUpload;
    try {
      if (mUploadClient == null || !mLastAccount.equals(mCurrentUpload.getAccount())) {
        mLastAccount=mCurrentUpload.getAccount();
        mStorageManager=new FileDataStorageManager(mLastAccount,getContentResolver());
        OwnCloudAccount ocAccount=new OwnCloudAccount(mLastAccount,this);
        mUploadClient=OwnCloudClientManagerFactory.getDefaultSingleton().getClientFor(ocAccount,this);
      }
      String remoteParentPath=new File(mCurrentUpload.getRemotePath()).getParent();
      remoteParentPath=remoteParentPath.endsWith(OCFile.PATH_SEPARATOR) ? remoteParentPath : remoteParentPath + OCFile.PATH_SEPARATOR;
      grantResult=grantFolderExistence(remoteParentPath);
      if (grantResult.isSuccess()) {
        OCFile parent=mStorageManager.getFileByPath(remoteParentPath);
        mCurrentUpload.getFile().setParentId(parent.getFileId());
        uploadResult=mCurrentUpload.execute(mUploadClient);
        if (uploadResult.isSuccess()) {
          saveUploadedFile();
        }
      }
 else {
        uploadResult=grantResult;
      }
    }
 catch (    AccountsException e) {
      Log_OC.e(TAG,"Error while trying to get autorization for " + mLastAccount.name,e);
      uploadResult=new RemoteOperationResult(e);
    }
catch (    IOException e) {
      Log_OC.e(TAG,"Error while trying to get autorization for " + mLastAccount.name,e);
      uploadResult=new RemoteOperationResult(e);
    }
 finally {
synchronized (mActiveUploads) {
        mActiveUploads.remove(uploadDbObject);
        Log_OC.i(TAG,"Remove CurrentUploadItem from pending upload Item Map.");
      }
      if (uploadResult.isException()) {
        mUploadClient=null;
      }
    }
    notifyUploadResult(uploadResult,mCurrentUpload);
    sendFinalBroadcast(mCurrentUpload,uploadResult);
  }
}
